<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create BillTo data object</description>
        </text-node>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateBillTo">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateBillTo" secure="false"/>
        <node-display x="1" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="null" key="StoredBasket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/BillTo/CreateCybersourceBillToObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="billto" key="CyberSourceBillTo"/>
          <key-binding alias="CurrentRequest.httpHeaders[&quot;x-is-remote_addr&quot;]" key="ipAddress"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.bml" key="BMLForm"/>
          <key-binding alias="asd" key="asd"/>
          <key-binding alias="true" key="UseBillingAddr"/>
          <key-binding alias="ReadFromForm" key="ReadFromForm"/>
          <key-binding alias="ReadFromBasket" key="ReadFromBasket"/>
        </pipelet-node>
        <node-display x="0" y="2"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="OK">
          <description>OK</description>
        </end-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create shipTo data object</description>
        </text-node>
        <node-display x="5" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateShipTo">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateShipTo" secure="false"/>
        <node-display x="5" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="null" key="StoredBasket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/ShipTo/CreateCybersourceShipToObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="shipto" key="CybersourceBillTo"/>
        </pipelet-node>
        <node-display x="0" y="2"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_5">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create purchase totals data object</description>
        </text-node>
        <node-display x="8" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreatePurchaseTotals">
    <segment>
      <node>
        <start-node call-mode="private" name="CreatePurchaseTotals" secure="false"/>
        <node-display x="8" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="null" key="StoredBasket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/PurchaseTotals/CreateCybersourcePurchaseTotalsObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="purchaseTotals" key="CybersourcePurchaseTotals"/>
          <key-binding alias="purchaseTotals" key="CyberSourcePurchaseTotals"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_7">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create ship from data object</description>
        </text-node>
        <node-display x="12" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_8">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create payment card data object</description>
        </text-node>
        <node-display x="15" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateShipFrom">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateShipFrom" secure="false"/>
        <node-display x="12" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/ShipFrom/CreateCybersourceShipFromObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="shipfrom" key="CybersourceShipFrom"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreatePaymentCard">
    <segment>
      <node>
        <start-node call-mode="private" name="CreatePaymentCard" secure="false"/>
        <node-display x="15" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="null" key="StoredBasket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/PaymentCard/CreateCybersourcePaymentCardObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard" key="CreditCardForm"/>
          <key-binding alias="card" key="CybersourceCard"/>
          <key-binding alias="ReadFromForm" key="ReadFromForm"/>
          <key-binding alias="ReadFromBasket" key="ReadFromBasket"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.cvn.value" key="CvNumber"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_11">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create tax service request data object</description>
        </text-node>
        <node-display x="18" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateTaxService">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateTaxService" secure="false"/>
        <node-display x="18" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Taxation/CreateCyberSourceTaxRequestObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="taxService" key="CyberSourceTaxRequest"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_13">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create tax items data object</description>
        </text-node>
        <node-display x="21" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateTaxItems">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateTaxItems" secure="false"/>
        <node-display x="21" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="null" key="StoredBasket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Taxation/CreateCybersourceTaxationItemsObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="ia" key="itemarray"/>
          <key-binding alias="im" key="itemmap"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_15">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create tax purchase totals data object</description>
        </text-node>
        <node-display x="25" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateTaxPurchaseTotals">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateTaxPurchaseTotals" secure="false"/>
        <node-display x="25" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="null" key="Basket"/>
          <key-binding alias="null" key="StoredBasket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Taxation/CreateCybersourceTaxationPurchaseTotalsObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="purchaseTaxTotals" key="CybersourcePurchaseTotals"/>
          <key-binding alias="Basket" key="Basket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_17">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create BML data object</description>
        </text-node>
        <node-display x="29" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateBMLData">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateBMLData" secure="false"/>
        <node-display x="29" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="null" key="StoredBasket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/BML/CreateCybersourceBMLObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="bml" key="CybersourceBML"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_19">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create BML payment card data object</description>
        </text-node>
        <node-display x="32" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_20">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create items data object</description>
        </text-node>
        <node-display x="35" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateBMLPaymentCard">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateBMLPaymentCard" secure="false"/>
        <node-display x="32" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="null" key="StoredBasket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/PaymentCard/CreateCybersourceBMLPaymentCardObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="bmlcard" key="CybersourceBMLCard"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateItem">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateItem" secure="false"/>
        <node-display x="35" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="null" key="StoredBasket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Item/CreateCybersourceItemObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="item" key="CyberSourceItem"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="OK">
          <description>OK</description>
        </end-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreatePurchaseOrderForAlipay">
    <segment>
      <node>
        <start-node name="CreatePurchaseOrderForAlipay" secure="false"/>
        <node-display x="12" y="7"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/PurchaseTotals/CreateCSPurchaseTotalForAlipay.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="purchaseTotals" key="CyberSourcePurchaseTotals"/>
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="OK"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_24">
    <segment>
      <node>
        <text-node>
          <description>This pipeline will be used paypal express for preparing basket after redirection</description>
        </text-node>
        <node-display x="1" y="9"/>
      </node>
    </segment>
  </branch>
  <branch basename="PrepareBasket">
    <segment>
      <node>
        <start-node call-mode="private" name="PrepareBasket" secure="false"/>
        <node-display x="1" y="10"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Basket.billingAddress==null" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="CreateBillingAddress" pipelet-set-identifier="bc_api">
                <key-binding alias="Basket" key="Basket"/>
                <key-binding alias="null" key="Address"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="Basket.defaultShipment.shippingAddress==null" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="CreateShippingAddress" pipelet-set-identifier="bc_api">
                <key-binding alias="Basket.defaultShipment" key="Shipment"/>
                <key-binding alias="Address" key="Address"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="target" x="0" y="1"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="2" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateItemForPaypal">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateItemForPaypal" secure="false"/>
        <node-display x="4" y="10"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="null" key="StoredBasket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Item/CreateCybersourceItemForPaypal.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="paypalOrigin" key="PaypalOrigin"/>
          <key-binding alias="item" key="CyberSourceItem"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="OK"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="RemovePaymentInstrument">
    <segment>
      <node>
        <start-node call-mode="private" name="RemovePaymentInstrument" secure="false"/>
        <node-display x="9" y="10"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/checkout/RemovePaymentInstrument.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="PaymentMethod" key="PaymentType"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
