<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>This pipeline initiates the test suit for Different Cybersource services like Auth Reversal</description>
        </text-node>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_2">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to make reversal request</description>
        </text-node>
        <node-display x="2" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="Start">
    <segment>
      <node>
        <start-node call-mode="private" name="Start" secure="true"/>
        <node-display x="1" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/services"/>
        </interaction-node>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="Reversal">
    <segment>
      <node>
        <start-node call-mode="private" name="Reversal" secure="true"/>
        <node-display x="2" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.subscription" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="services/reversalform"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="-1" y="0"/>
          <bend-point relative-to="target" x="-1" y="-1"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Subscription/CreateCyberSourcePurchaseTotalsObject_UserData.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourcePurchaseTotals" key="CyberSourcePurchaseTotals"/>
          <key-binding alias="CurrentForms.subscription.amount.htmlValue" key="amount"/>
          <key-binding alias="CurrentForms.subscription.currency.htmlValue" key="currency"/>
        </pipelet-node>
        <node-display x="2" y="0"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1" target-path="./b4.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Services/CreateReversal.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="reason" key="ReasonCode"/>
          <key-binding alias="authreason" key="AuthorizationReasonCode"/>
          <key-binding alias="authamount" key="AuthorizationAmount"/>
          <key-binding alias="authcode" key="AuthorizationCode"/>
          <key-binding alias="descision" key="Decision"/>
          <key-binding alias="requestid" key="RequestID"/>
          <key-binding alias="token" key="RequestToken"/>
          <key-binding alias="CybersourceBillTo" key="billTo"/>
          <key-binding alias="CybersourcePaymentCard" key="card"/>
          <key-binding alias="CybersourcePurchaseTotals" key="purchaseTotals"/>
          <key-binding alias="CybersourceShipTo" key="shipTo"/>
          <key-binding alias="AVSCode" key="AVSCode"/>
          <key-binding alias="AVSCodeRaw" key="AVSCodeRaw"/>
          <key-binding alias="DAVReasonCode" key="DAVReasonCode"/>
          <key-binding alias="subscriptionID" key="SubscriptionIDToken"/>
          <key-binding alias="decision" key="decision"/>
          <key-binding alias="invalidField" key="invalidField"/>
          <key-binding alias="reasonCode" key="reasonCode"/>
          <key-binding alias="requestID" key="requestID"/>
          <key-binding alias="requestToken" key="requestToken"/>
          <key-binding alias="missingField" key="missingField"/>
          <key-binding alias="CurrentForms.subscription.authorizationID.htmlValue" key="authorizationID"/>
          <key-binding alias="reversalResponse" key="reversalResponse"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.subscription" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.subscription" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/reversalresult"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_6">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="3" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_7">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used in case of express checkout where call to  set service is made and after redirection to and from paypal get service call is made and user is redirected to order summary page.</description>
        </text-node>
        <node-display width="2" x="7" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="PaypalExpressCheckout">
    <segment>
      <node>
        <start-node call-mode="private" name="PaypalExpressCheckout" secure="false"/>
        <node-display x="7" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="empty(paypalReturnUrl)?dw.web.URLUtils.https('Cybersource-ProcessPaypalExpress'):paypalReturnUrl" key="From_0"/>
          <key-binding alias="paypalReturnUrl" key="To_0"/>
          <key-binding alias="empty (paypalCancelUrl) ? dw.web.URLUtils.https('Cart-Show') : paypalCancelUrl" key="From_1"/>
          <key-binding alias="paypalCancelUrl" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cybersource-PaypalSetService"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="new dw.system.Status(dw.system.Status.ERROR, &quot;confirm.error.technical&quot;)" key="From_0"/>
                <key-binding alias="PlaceOrderError" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <jump-node start-name-ref="Cart-Show"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="OK">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="paypal/paypalredirection"/>
              </interaction-node>
              <node-display x="0" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_9">
    <segment>
      <node>
        <text-node>
          <description>Call is made to Paypal set service</description>
        </text-node>
        <node-display x="9" y="5"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_10">
    <segment>
      <node>
        <text-node>
          <description>Call is made to Paypal get service</description>
        </text-node>
        <node-display x="9" y="8"/>
      </node>
    </segment>
  </branch>
</pipeline>
