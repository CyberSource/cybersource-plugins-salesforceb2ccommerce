/**
*	TestCreateSubscription.ds
*	Perfroms the pay subscription create service and returns the response.
*
* @input 	billTo : Object
* @input 	card : Object
* @input 	purchaseTotals : Object
* @output SubscriptionIDToken :String
* @output decision :String
* @output invalidField : Array;
* @output missingField : Array
* @output reasonCode : Object
* @output requestID : Object
* @output requestToken : Object
* @output subscriptionResponse : Object
*/
var SubscriptionFacade = require('int_cybersource/cartridge/scripts/Facade/SubscriptionFacade');

function execute( pdict : PipelineDictionary ) : Number
{

    var billToObject = pdict.billTo;
	var cardObject = pdict.card;
	var purchaseObject = pdict.purchaseTotals;
	var response = null;

	var result = SubscriptionFacade.CreateSubscription(billToObject,cardObject, purchaseObject);
	
	if(result.error){
		return PIPELET_ERROR;
	}
	
		response = result.serviceResponse;
		pdict.subscriptionResponse = response;
		if ( null != response.SubscriptionIDToken)
		{
			pdict.SubscriptionIDToken = response.SubscriptionIDToken;
		}
		pdict.decision = response.decision;
		pdict.invalidField = response.invalidField;
		pdict.missingField = response.missingField;
		pdict.reasonCode = response.reasonCode;
		pdict.requestID = response.requestID;
		pdict.requestToken = response.requestToken;
	
	return PIPELET_NEXT;
}

