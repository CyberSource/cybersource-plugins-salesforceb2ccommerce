/**
* Performs the tax calculation on each items exist in Basket. If basket is null it returns
* with PIPELET_ERROR if not null, Cybersource request will be processed.  
*
* @input  billTo : Object
* @input  shipTo : Object
* @input  card : Object
* @input  purchaseTotals : Object
* @input  shipFrom : Object
* @input  taxService : Object
* @input  itemArray : Array
* @input  itemMap : dw.util.ArrayList
* @input  Basket : dw.order.LineItemCtnr
* @output Decision : String The decision of the complete request, one of ACCEPT, REJECT, or ERROR
* @output ReasonCode : Number The global reason code returned by Cybersource (100 = Success)
* @output RequestID : String The request id generated by Cybersource
* @output RequestToken : String the token generated by Cybersource
* @output DAVReasonCode : Number The DAV reason code returned by Cybersource (100 = Success)
* @output totalTaxAmount : String
* @output TaxReply : Object
* @output taxResponse : Object
*/
var TestFacade = require('int_cybersource/cartridge/scripts/Facade/TestFacade');
function execute( pdict : PipelineDictionary ) : Number
{
	var billTo = pdict.billTo;
	var shipTo = pdict.shipTo;
	var card = pdict.card;
	var purchaseTotals = pdict.purchaseTotals;
	var items = pdict.itemArray;
	var itemMap = pdict.itemMap;
	var shipFrom = pdict.shipFrom;
	var taxRequestObject = pdict.taxService;
	
	var result = TestFacade.TestTax(billTo, shipTo, card, purchaseTotals, shipFrom, taxRequestObject, items, itemMap);
	var responseObject = result.serviceResponse;
	pdict.taxResponse = responseObject;
	if(result.error){
		pdict.Decision="ERROR";
		throw new Error(result.errorMsg);
		return PIPELET_ERROR;
	}

	pdict.Decision = responseObject.Decision;
	pdict.RequestID = responseObject.RequestID;
	pdict.RequestToken = responseObject.RequestToken;
	if( !empty(responseObject.DAVReasonCode) ) {
		pdict.DAVReasonCode = responseObject.DAVReasonCode;
	}
	// in case of success update basket
	if( responseObject.Decision=="ACCEPT" ) {
		pdict.TaxReply = responseObject.TaxReply;
		pdict.totalTaxAmount = responseObject.TotalTaxAmount;
	}

	if( responseObject.ReasonCode==100 ) {
		return PIPELET_NEXT;
	} else {
		throw new Error("reason code arrived as "+ responseObject.ReasonCode);
		return PIPELET_ERROR;
	}
	
    return PIPELET_NEXT;
}