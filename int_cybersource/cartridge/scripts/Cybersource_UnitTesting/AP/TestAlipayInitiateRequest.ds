/**
* 	TestAlipayInitiateRequest.ds
*	This script call service to initiate payment for Alipay and set the response in response object
* 	and also handles the logging of different error scenarios while making service call.
*
* 	@input  purchaseTotals : Object
*
* 	@output Decision : String The decision of the complete request, one of ACCEPT, REJECT, or ERROR
* 	@output ReasonCode : Number The global reason code returned by Cybersource (100 = Success)
* 	@output RequestID : String The request id generated by Cybersource
* 	@output RequestToken : String the token generated by Cybersource
* 	@output ReconciliationID : String
*   @output alipayInitiateResponse : Object
*/
var TestFacade = require('int_cybersource/cartridge/scripts/Facade/TestFacade');
function execute( pdict : PipelineDictionary ) : Number
{
	//set the order object, purchase object and return URL from pipeline dictionary
   	var purchaseObject = pdict.purchaseTotals;
	var result = TestFacade.TestAlipayInitiateRequest(purchaseObject);
	if(result.error){
		throw new Error(result.errorMsg);
		return PIPELET_ERROR;
	}
	var responseObject = result.serviceResponse;
	//set response values in pipeline dictionary
	pdict.alipayInitiateResponse = responseObject;
	pdict.RequestID = responseObject.RequestID;
	pdict.RequestToken = responseObject.RequestToken;
	pdict.ReasonCode = responseObject.ReasonCode;
	pdict.Decision = responseObject.Decision;
	if(!empty(responseObject.apInitiateReply)) {
		pdict.ReconciliationID = responseObject.ReconciliationID;
	}
	return PIPELET_NEXT;
}
