/**
* TestVmeGetCheckoutDetails.ds
* Performs the get checkout details of the Visa VMe.
*
* @input  apObject : Object
* @input  purchaseTotals : Object
* @output Decision : String The decision of the complete request, one of ACCEPT, REJECT, or ERROR
* @output ReasonCode : Number The global reason code returned by Cybersource (100 = Success)
* @output RequestID : String The request id generated by Cybersource
* @output RequestToken : String the token generated by Cybersource
* @output AuthorizationReasonCode : Number The auth reason code returned by Cybersource (100 = Success)
* @output apAdditionalAmount : String the amount on order
* @output apDiscountAmt : String the amount on order
* @output apGiftWrapAmt : String the girft wrap amount on order
* @output dateTime : String
* @output providerResponse : String
* @output apReasonCode : Number the Checkout Reply ReasonCode
* @output apStatus : String the status of order
* @output apHandlingAmount : String  the handling amount on order
* @output apOrderID : String the order id
* @output apProductDescription : String Product description
* @output apProductID : String Product Id
* @output apPurchaseID : String purchase Id
* @output apShippingAmount : String the shipping amount
* @output apShippingHandlingAmount : String the shipping handling amount
* @output apSubtotalAmount : String the sub total of order
* @output apTaxAmount : String tax
* @output apPurchaseAmount : String purchase amount
* @output city : String  Shipping city
* @output country : String  Shipping country
* @output name : String  Name of a customer
* @output postalCode : String  Postal Code
* @output state : String  Shipping state
* @output street1 : String  Shipping Address Line 1
* @output street2 : String  Shipping Address Line 2
* @output email : String  Email Address of Customer
* @output phoneNumber : String Phone Number
*/
importPackage( dw.system );
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.rpc );
importPackage( dw.util );
importPackage( dw.value);

importScript('cybersource/libCybersource.ds');
importScript('cybersource/Cybersource_AP_Object.ds');
importScript('cybersource/Cybersource_PurchaseTotals_Object.ds');

function execute( pdict : PipelineDictionary ) : Number
{
	var CybersourceHelper = getCybersourceHelper();
	var purchaseObject : PurchaseTotals_Object = pdict.purchaseTotals;
	var apObject : AP_Object = pdict.apObject;
	
	
	var csReference : WebReference = webreferences.CyberSourceTransaction;
	var service : Stub = csReference.getService("TransactionProcessor", "portXML");
	
	CybersourceHelper.setEndpoint(service);
	
	if(!CybersourceHelper.createHeader(service)){
		return null;
	}

	var request = new csReference.RequestMessage();
	
	CybersourceHelper.addAPCheckoutDetailsRequestInfo(request, purchaseObject, apObject, "test");
	
	var response = null;
	// send request
	try{
		response = service.runTransaction(request);
	}catch(e){
			Logger.error("[libCybersource.ds] Error in Checkout Details Request ( {0} )",e.message);
		return PIPELET_ERROR;
	}
	
	if(response == null){
		return PIPELET_ERROR;
	}
	
	pdict.RequestID = response.requestID;
	pdict.RequestToken = response.requestToken;
	pdict.ReasonCode = response.reasonCode.get();
	pdict.Decision = response.decision;	
	if (null != response.apCheckoutDetailsReply) {
		pdict.dateTime = response.apCheckoutDetailsReply.dateTime;
		pdict.providerResponse = response.apCheckoutDetailsReply.providerResponse;
		pdict.apReasonCode = response.apCheckoutDetailsReply.reasonCode.get();
		pdict.apStatus = response.apCheckoutDetailsReply.status;
	}	
	
	if(null != response.apReply){
		pdict.apAdditionalAmount = response.apReply.additionalAmount;
		pdict.apDiscountAmt = response.apReply.discountAmount;
		pdict.apGiftWrapAmt = response.apReply.giftWrapAmount;
		pdict.apHandlingAmount = response.apReply.handlingAmount;
		pdict.apOrderID = response.apReply.orderID;
		pdict.apProductDescription = response.apReply.productDescription;
		pdict.apProductID = response.apReply.productID;
		pdict.apPurchaseID = response.apReply.purchaseID;
		pdict.apShippingAmount = response.apReply.shippingAmount;
		pdict.apShippingHandlingAmount = response.apReply.shippingHandlingAmount;
		pdict.apSubtotalAmount = response.apReply.subtotalAmount;
		pdict.apTaxAmount = response.apReply.taxAmount;
		pdict.apPurchaseAmount = response.apReply.totalPurchaseAmount;		
	}
	
	if(null != response.shipTo) {
		pdict.city = response.shipTo.city;
		pdict.country = response.shipTo.country;
		pdict.name = response.shipTo.name;
		pdict.postalCode = response.shipTo.postalCode;
		pdict.state = response.shipTo.state;
		pdict.street1 = response.shipTo.street1;
		pdict.street2 = response.shipTo.street2;
		pdict.phoneNumber = response.shipTo.phoneNumber;
	}
	if(null != response.billTo) {
		pdict.email = response.billTo.email;
	}
	


    return PIPELET_NEXT;
}

