/**
* TestVmeConfirmPurchaseRequest.ds
* Performs the Confirm Purchase Request for Visa VMe.
*
* @input  apObject : Object
* @input  purchaseTotals : Object
* @output Decision : String The decision of the complete request, one of ACCEPT, REJECT, or ERROR
* @output ReasonCode : Number The global reason code returned by Cybersource (100 = Success)
* @output RequestID : String The request id generated by Cybersource
* @output RequestToken : String the token generated by Cybersource
* @output dateTime : String
* @output providerResponse : String
* @output apReasonCode : Number the Checkout Reply ReasonCode
* @output apOrderID : String the order id
* @output purchaseTotalCurrency : String Currency
*
*/
importPackage( dw.system );
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.rpc );
importPackage( dw.util );
importPackage( dw.value);

importScript('cybersource/libCybersource.ds');
importScript('cybersource/Cybersource_PurchaseTotals_Object.ds');
importScript('cybersource/Cybersource_AP_Object.ds');

var numbersOnlyRegExp : RegExp = /\D/g;
function execute( pdict : PipelineDictionary ) : Number
{
	var CybersourceHelper = getCybersourceHelper();	
	
	var apObject : AP_Object = pdict.apObject;
	var purchaseObject : PurchaseTotals_Object = pdict.purchaseTotals;
			 
	var csReference : WebReference = webreferences.CyberSourceTransaction;
	var service : Stub = csReference.getService("TransactionProcessor", "portXML");
	
	CybersourceHelper.setEndpoint(service);
	
	if(!CybersourceHelper.createHeader(service)){
		return null;
	}

	var request = new csReference.RequestMessage();
	
	CybersourceHelper.addAPConfirmPurchaseRequestInfo(request, purchaseObject, apObject, "test");
	
	var response = null;
	// send request
	try{
		response = service.runTransaction(request);
	}catch(e){
			Logger.error("[libCybersource.ds] Error in Confirm Purchase Request ( {0} )",e.message);
		return PIPELET_ERROR;
	}
	
	if(response == null){
		return PIPELET_ERROR;
	}
	
	pdict.RequestID = response.requestID;
	pdict.RequestToken = response.requestToken;
	pdict.ReasonCode = response.reasonCode.get();
	pdict.Decision = response.decision;
	
	if(null != response.apConfirmPurchaseReply){
		pdict.dateTime = response.apConfirmPurchaseReply.dateTime;
		pdict.providerResponse = response.apConfirmPurchaseReply.providerResponse;
		pdict.apReasonCode = response.apConfirmPurchaseReply.reasonCode.get();						
	}
	if(null != response.apReply)
		pdict.apOrderID = response.apReply.orderID;
	if(null != response.purchaseTotals)
		pdict.purchaseTotalCurrency = response.purchaseTotals.currency;

    return PIPELET_NEXT;
}

