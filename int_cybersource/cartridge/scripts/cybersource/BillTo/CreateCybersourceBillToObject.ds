/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*	 @input BMLForm : dw.web.FormElement
*	 @input BillForms : dw.web.FormGroup
*	 @input ipAddress : String
*    @input Basket : dw.order.Basket
*    @input ReadFromBasket : Boolean
*    @output CyberSourceBillTo : Object
*
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.order );
importScript('cybersource/Cybersource_BillTo_Object.ds');
function execute( pdict : PipelineDictionary ) : Number
{
	var billToObject: BillTo_Object = new BillTo_Object();
	
	if ( pdict.ReadFromBasket )
	{
		var basket : Basket = pdict.Basket;
		var billingAddress : OrderAddress = basket.billingAddress;

		if( !empty(billingAddress)&&!empty(basket) ) {
			billToObject.setFirstName  ( billingAddress.firstName );
			billToObject.setLastName   ( billingAddress.lastName );
			billToObject.setStreet1    ( billingAddress.address1 );
			billToObject.setStreet2    ( billingAddress.address2 );
			billToObject.setCity       ( billingAddress.city );
			billToObject.setState      ( billingAddress.stateCode );
			billToObject.setPostalCode ( billingAddress.postalCode );
			billToObject.setCountry    ( billingAddress.countryCode );
			billToObject.setPhoneNumber( billingAddress.phone );
			billToObject.setEmail      ( basket.customerEmail );
		} else {
			var billAddrForm : dw.web.FormElement =  pdict.BillForms;
			
			billToObject.setFirstName  ( billAddrForm.addressFields.firstName.value);
			billToObject.setLastName   ( billAddrForm.addressFields.lastName.value);
			billToObject.setStreet1    ( billAddrForm.addressFields.address1.value);
			billToObject.setStreet2    ( billAddrForm.addressFields.address2.value);
			billToObject.setCity       ( billAddrForm.addressFields.city.value);
			billToObject.setState      ( billAddrForm.addressFields.states.state.value);
			billToObject.setPostalCode ( billAddrForm.addressFields.zip.value);
			billToObject.setCountry    ( billAddrForm.addressFields.country.value);
			billToObject.setPhoneNumber( billAddrForm.addressFields.phone.value);
			billToObject.setEmail(billAddrForm.email.emailAddress.htmlValue);		
		}
	}
	else
	{
		var billAddrForm : dw.web.FormElement =  pdict.BillForms;
		
		billToObject.setFirstName  ( billAddrForm.addressFields.firstName.value);
		billToObject.setLastName   ( billAddrForm.addressFields.lastName.value);
		billToObject.setStreet1    ( billAddrForm.addressFields.address1.value);
		billToObject.setStreet2    ( billAddrForm.addressFields.address2.value);
		billToObject.setCity       ( billAddrForm.addressFields.city.value);
		billToObject.setState      ( billAddrForm.addressFields.states.state.value);
		billToObject.setPostalCode ( billAddrForm.addressFields.zip.value);
		billToObject.setCountry    ( billAddrForm.addressFields.country.value);
		billToObject.setPhoneNumber( billAddrForm.addressFields.phone.value);
		billToObject.setEmail(billAddrForm.email.emailAddress.htmlValue);		
	
	}
	billToObject.setIpAddress(pdict.ipAddress);

	//  @@@@@@@@@@@   BML part @@@@@@@@@@@@@	
	var bmlform :  dw.web.FormElement =  pdict.BMLForm;
	if(bmlform != null)
	{
		// billToObject.setDateOfBirth("19541217");
		// billToObject.setSsn("000001234"); 
		
		if(bmlform.year.value != null)
		{	
			if (bmlform.year.value.toString() != null && bmlform.year.value.toString() != "")
			{  
				billToObject.setDateOfBirth(bmlform.year.value.toString()+ StringUtils.formatNumber(bmlform.month.value, "00", "en_US") + StringUtils.formatNumber(bmlform.day.value, "00", "en_US"));
				billToObject.setSsn('00000' + bmlform.ssn.value);			
			}
		}
	}
	pdict.CyberSourceBillTo = billToObject;
	
    return PIPELET_NEXT;
}
