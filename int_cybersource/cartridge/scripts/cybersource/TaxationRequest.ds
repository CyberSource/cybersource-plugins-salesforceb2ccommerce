/**
* TaxationRequest.ds
* Performs the tax calculation on each items exist in Basket. If basket is null it returns
* with PIPELET_ERROR if not null, Cybersource request will be processed.   
*
* @input Basket : dw.order.LineItemCtnr The basket whose tax is to be calculated
* @input  billTo : Object
* @input  shipTo : Object
* @input  card : Object
* @input  shipFrom : Object
* @input  itemArray: Array
* @input  itemMap : dw.util.HashMap
* @input  purchaseTotals : Object
* @input  taxService : Object
* @output totalTaxAmount : String
* @output response : Object
* @output ReasonCode : Number The reason code returned by Cybersource (100 = Success)
* @output Decision : String
*
*/
importPackage( dw.system );
var TaxFacade = require('int_cybersource/cartridge/scripts/Facade/TaxFacade');

function execute( pdict : PipelineDictionary ) : Number
{
    // read pipeline dictionary input parameter
    var reasonCode : Number;
	var basket : LineItemCtnr = pdict.Basket;
		
	if((basket == null)){
		Logger.error("Please provide a Basket!");
		return PIPELET_ERROR;
	}

	var billToObject: BillTo_Object = pdict.billTo;
	var shipToObject: ShipTo_Object = pdict.shipTo;
	var cardObject: Card_Object = pdict.card;
	var purchaseObject: PurchaseTotals_Object = pdict.purchaseTotals;
	var itemArray : Array = pdict.itemArray;
	var itemMap : HashMap = pdict.itemMap;
	var shipFrom : ShipFrom_Object = pdict.shipFrom;
	var taxService : TaxService_Object = pdict.taxService;
	var taxationResponse = null;
	
	var result =  TaxFacade.TaxationRequest(basket, billToObject, shipToObject, cardObject, shipFrom, itemArray, itemMap, purchaseObject, taxService);
	
	if(result.error){
		Logger.error("[Tax Facade.ds] Error in taxation request");
		return PIPELET_ERROR;
	}
		taxationResponse = result.response;
		pdict.response = taxationResponse;
		pdict.Decision = taxationResponse.decision;
		//pdict.ReasonCode = taxationResponse.reasonCode;
		
	if(taxationResponse.reasonCode == 100){
		return PIPELET_NEXT;
	}else{
		return PIPELET_ERROR;
	}
	
    return PIPELET_NEXT;
}
