/**
* CreateCyberSourceTaxRequestObject.ds
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* @output CybersourceTaxService : Object
*
*/
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.rpc );
importPackage( dw.util );
importPackage( dw.value);

importScript('cybersource/libCybersource.ds');
importScript('cybersource/Cybersource_TaxRequest_Object.ds');

function execute( pdict : PipelineDictionary ) : Number
{
	var CybersourceHelper = getCybersourceHelper();
	
	var taxServiceObject : TaxService_Object = new TaxService_Object();
	
	taxServiceObject.setOrderAcceptanceCity(CybersourceHelper.getPOACity());
    taxServiceObject.setOrderAcceptanceState(CybersourceHelper.getPOAStateCode());
    taxServiceObject.setOrderAcceptancePostalCode(CybersourceHelper.getPOAZipCode());
    taxServiceObject.setOrderAcceptanceCountry(CybersourceHelper.getPOACountryCode());
    
    taxServiceObject.setOrderOriginCity(CybersourceHelper.getPOOCity());
    taxServiceObject.setOrderOriginState(CybersourceHelper.getPOOStateCode());
    taxServiceObject.setOrderOriginPostalCode(CybersourceHelper.getPOOZipCode());
    taxServiceObject.setOrderOriginCountry(CybersourceHelper.getPOOCountryCode());
    
    pdict.CybersourceTaxService = taxServiceObject;
        
    return PIPELET_NEXT;
}
