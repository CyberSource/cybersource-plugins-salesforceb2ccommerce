/**
* Performs the authorization of the credit card capture request. If order information is
* sumbitted in the CCCapture request.
* @input Order : dw.order.LineItemCtnr
*
* @output Decision : String The decision of the complete request, one of ACCEPT, REJECT, or ERROR
* @output ReasonCode : Number The global reason code returned by Cybersource (100 = Success)
* @output RequestID : String The request id generated by Cybersource
* @output RequestToken : String the token generated by Cybersource
* @output CaptureReasonCode : Number The auth reason code returned by Cybersource (100 = Success)
* @output CaptureAmount : String the amount authorized by Cybersource
* @output CaptureResponse :Object
*/
var CardFacade = require('int_cybersource/cartridge/scripts/Facade/CardFacade');
function execute( pdict : PipelineDictionary ) : Number
{
    // read pipeline dictionary input parameter
    var order = pdict.Order;
    var result = CardFacade.CCCaptureRequest(order);
    if (result.error) {
    	throw new Error(result.errorMsg);
		return PIPELET_ERROR;
	}
	var serviceResponse = result.serviceResponse;
	pdict.CaptureResponse = result.serviceResponse;
	pdict.RequestID = serviceResponse.RequestID;
	pdict.RequestToken = serviceResponse.RequestToken;
	pdict.ReasonCode = serviceResponse.ReasonCode;
	pdict.Decision = serviceResponse.Decision;
	
	if(null != serviceResponse.ccCaptureReply){
		pdict.CaptureAmount = serviceResponse.CaptureAmount;
		pdict.CaptureReasonCode = serviceResponse.CaptureReasonCode;
	}
    return PIPELET_NEXT;
}
