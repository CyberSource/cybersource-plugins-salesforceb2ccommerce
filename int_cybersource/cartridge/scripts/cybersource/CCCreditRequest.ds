/**
*
* @input Order : dw.order.Order
*
*/
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.rpc );
importPackage( dw.util );
importPackage( dw.value );

importScript('libCybersource.ds');

function execute( pdict : PipelineDictionary ) : Number
{

    var order : Order = pdict.Order;
    var pi : OrderPaymentInstrument = null;
	var CybersourceHelper = getCybersourceHelper();
	var csReference : WebReference = webreferences.CyberSourceTransaction;
	var service : Stub = csReference.getService("TransactionProcessor", "portXML");

	CybersourceHelper.setEndpoint(service);
	if(!CybersourceHelper.createHeader(service)){
		return PIPELET_ERROR;
	}
    
    for each(pi in order.getPaymentInstruments(PaymentInstrument.METHOD_CREDIT_CARD))
    { 		
		if(pi.paymentTransaction.amount < 0 && !pi.paymentTransaction.custom.paid)
		{
			var request = new csReference.RequestMessage();
			CybersourceHelper.addCCCreditRequestInfo(request, order, pi);
	
			var response = null;
			try
			{
				response = service.runTransaction(request);
			}
			catch(e)
			{
				Logger.error("[libCybersource.ds] Error in credit request ( {0} )",e.message);
			}
	
			if(response != null && response.decision == 'ACCEPT')
			{
				pi.paymentTransaction.custom.paid = true;
				order.custom.refundDue += pi.paymentTransaction.amount.value;		

				if("AmountPaid" in order.custom)
				{
					order.custom.AmountPaid += pi.paymentTransaction.amount.value;	
				}
			}
		}
	}	
		
    return PIPELET_NEXT;
}
