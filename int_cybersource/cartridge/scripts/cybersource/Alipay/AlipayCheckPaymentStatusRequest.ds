/**
*	AlipayCheckPaymentStatusRequest.ds
*
*	This script call service to check payment status for alipay on basis of request id generated by Initiate payment service  
* 	and set the response in response object and also handles the logging of different error scenarios 
*	while making service call.
*
* 	@input 	OrderNo : String The order no
* 	@input  RequestID : String
*
* 	@output Decision : String The decision of the complete request, one of ACCEPT, REJECT, or ERROR
* 	@output ReasonCode : Number The global reason code returned by Cybersource (100 = Success)
* 	@output ReconciliationID : String
* 	@output PaymentStatus : String
* 	@output ProcessorTransactionID : String
* 	@output RequestID : String The request id generated by Cybersource
* 	@output RequestToken : String the token generated by Cybersource
*/
importPackage( dw.system );
var alipayFacade = require('int_cybersource/cartridge/scripts/Facade/AlipayFacade');

function execute( pdict : PipelineDictionary ) : Number
{
	
	//set the order object, purchase object and return URL from pipeline dictionary
	var orderNo : String = pdict.OrderNo;
   	
   	var paymentResponse = alipayFacade.AlipayCheckPaymentStatusRequest(orderNo,pdict.RequestID);
   		if(paymentResponse.success && paymentResponse.alipayPaymentStatusResponse !== null)
   		{
   			//set response values in pipeline dictionary
			pdict.RequestID = paymentResponse.alipayPaymentStatusResponse.RequestID;
			pdict.RequestToken = paymentResponse.alipayPaymentStatusResponse.RequestToken;
			pdict.ReasonCode = paymentResponse.alipayPaymentStatusResponse.ReasonCode;
			pdict.Decision = paymentResponse.alipayPaymentStatusResponse.Decision;
			pdict.PaymentStatus = paymentResponse.alipayPaymentStatusResponse.apPaymentStatus;
			pdict.ReconciliationID = paymentResponse.alipayPaymentStatusResponse.ReconciliationID;
			pdict.ProcessorTransactionID = paymentResponse.alipayPaymentStatusResponse.ProcessorTransactionID;
   		}
   	
	return PIPELET_NEXT;
}
