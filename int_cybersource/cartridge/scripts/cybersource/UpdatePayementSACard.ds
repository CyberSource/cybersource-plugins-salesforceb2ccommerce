/**
* UpdatePayementSACard.ds
* To set the paymentinstrument with the card details, this will be further used in saving card information in customers account:
*
*   @input PaymentInstrument : dw.order.PaymentInstrument payment instrument to update.
*   @input CardExpiryDate : String The card expiry date string in secure acceptance response.
*   @input CardNumber : String The card number of secure acceptance response.
*   @input CardType : String The card type of secure acceptance response.
*   @input PaymentToken : String The payment token of secure acceptance response.
*   @input BillToForename : String The billto forename of secure acceptance response.
*   @input BillToSurname : String The billto surname of secure acceptance response.  
*
*/
var logger = require('dw/system/Logger');
var PaymentInstrumentUtils = require('int_cybersource/cartridge/scripts/utils/PaymentInstrumentUtils');
function execute( args : PipelineDictionary ) : Number
{
	try {
	    // read pipeline dictionary input parameter
		var paymentInstrument = args.PaymentInstrument;
		var expiryDateString = args.CardExpiryDate;
		var maskedNumber = args.CardNumber;
		var cardType = args.CardType;
		var cardToken = args.PaymentToken;
		var firstname = args.BillToForename;
		var lastName = args.BillToSurname;
	
	    // insert business logic here
		PaymentInstrumentUtils.updatePaymentInstumenSACard(paymentInstrument, expiryDateString, maskedNumber, cardType, cardToken, firstname, lastName);
		return PIPELET_NEXT;
	}
	catch(err) {
		logger.error('Error creating secure acceptance payment instrument: {0}', err.message);
		return PIPELET_ERROR;	
	}
}