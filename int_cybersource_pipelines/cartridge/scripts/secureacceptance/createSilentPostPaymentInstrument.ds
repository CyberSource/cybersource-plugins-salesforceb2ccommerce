/**
* Creates a Silent Post Secure Acceptance payment instrument. This script requires a Basket and payment method  as 
* input parameters. 
*
*   @input Basket : dw.order.Basket The basket.
*/
function execute( pdict : PipelineDictionary ) : Number
{
    // read pipeline dictionary input parameters
    var basket = pdict.Basket;
    var CybersourceConstants = require('int_cybersource/cartridge/scripts/utils/CybersourceConstants.ds');
	var orderTotal  = basket.getTotalGrossPrice();
	removeDuplicates(basket);
	basket.createPaymentInstrument( CybersourceConstants.METHOD_SA_SILENTPOST, orderTotal );
	return PIPELET_NEXT;
}


/** 
Determines if the basket already contains a silent post 
payment instrument representing the ID. If so, removes 
the existing payment instrument from the basket.
*/

function removeDuplicates(basket)
{
	var paymentInstruments = basket.getPaymentInstruments();
	var CybersourceConstants = require('int_cybersource/cartridge/scripts/utils/CybersourceConstants.ds');
	for each (var pi in paymentInstruments) {		
	// deletes gift card payment instruments if existing
		if(CybersourceConstants.METHOD_SA_SILENTPOST.equalsIgnoreCase(pi.paymentMethod) )
		{		
			basket.removePaymentInstrument(pi);
		}
	}	
}