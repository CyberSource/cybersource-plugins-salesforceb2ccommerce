/*
* Description of the module and the logic it provides
*
* @module cartridge/scripts/GetCardinalObjects
* @input Basket : dw.order.Basket
* @output order : String
* @output jwtToken : String
* @output iscardinal : Boolean
*/

'use strict';

importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.value );
importPackage( dw.util );
function execute( pdict : PipelineDictionary ) : Number
{
     var basket : Basket = pdict.Basket;
    
     var jwtUtil = require('int_cybersource/cartridge/scripts/cardinal/JWTBuilder'); 
     var cardinalUtil = require('int_cybersource/cartridge/scripts/cardinal/CardinalUtils');
     var CybersourceConstants = require('int_cybersource/cartridge/scripts/utils/CybersourceConstants');
     var iscardinal : Boolean = false;
     var selectedPaymentMethod = basket.getPaymentInstruments()[0].paymentMethod;
     
      if(selectedPaymentMethod.equals(CybersourceConstants.METHOD_CREDIT_CARD) || selectedPaymentMethod.equals(CybersourceConstants.METHOD_SA_SILENTPOST)
        		|| selectedPaymentMethod.equals(CybersourceConstants.METHOD_VISA_CHECKOUT)){
        	iscardinal = true;
        	var jwtToken : String = jwtUtil.generateTokenWithKey();
        	var creditCardForm = session.forms.billing.paymentMethods.creditCard;
     		var OrderObject = cardinalUtil.getOrderObject(basket,creditCardForm);
     		var order = JSON.stringify(OrderObject);
     
     		pdict.jwtToken = jwtToken;
     		pdict.order = order;
     		pdict.iscardinal = iscardinal;	
     }     
     return PIPELET_NEXT;
}