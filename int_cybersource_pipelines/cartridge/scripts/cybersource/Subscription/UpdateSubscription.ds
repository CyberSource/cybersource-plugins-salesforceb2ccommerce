/**
*      UpdateSubscription.ds
*      Perfroms the update subscription info service and returns the response.
*
*      @input  storedSubscriptionID : String
*      @input  formType : String
*		
*      @output decision :String
*      @output invalidField : Array;
*      @output missingField : Array
*      @output reasonCode : Object
*      @output requestID : Object
*      @output requestToken : Object
*      @output NewSubscriptionID : String
*
*/
var Logger = dw.system.Logger;
var SubscriptionFacade = require('int_cybersource/cartridge/scripts/facade/SubscriptionFacade');
var CardHelper = require('int_cybersource/cartridge/scripts/helper/CardHelper'); 
var CommonHelper = require('int_cybersource/cartridge/scripts/helper/CommonHelper'); 

function execute( pdict : PipelineDictionary ) : Number
{
       var billToObject =  CommonHelper.CreateCyberSourceBillToObject_UserData(pdict.formType).billTo; 
       var purchaseObject=  CommonHelper.CreateCyberSourcePurchaseTotalsObject_UserData(session.forms.subscription.currency.htmlValue , session.forms.subscription.amount.htmlValue ).purchaseTotals; 
       var cardObject = CardHelper.CreateCybersourcePaymentCardObject(pdict.formType).card; 
       var storedSubscriptionID : String = pdict.storedSubscriptionID;
       var response = null;
       
       var result = SubscriptionFacade.UpdateSubscription(billToObject, cardObject, purchaseObject, storedSubscriptionID);
       
       if(result.error){
              Logger.error("[UpdateSubscription.ds] response is null");
              return PIPELET_ERROR;
       }
       
              response = result.response;
              pdict.requestID = response.requestID;
              pdict.requestToken = response.requestToken;
              pdict.reasonCode = response.reasonCode;
              pdict.decision = response.decision;
              pdict.invalidField = response.invalidField;
              pdict.missingField = response.missingField;
              if(null != response.NewSubscriptionID){
                     pdict.NewSubscriptionID = response.NewSubscriptionID;
              }
       
       

       Logger.info("[UpdateSubscriptionID.ds] Leaving");
    return PIPELET_NEXT;
}


