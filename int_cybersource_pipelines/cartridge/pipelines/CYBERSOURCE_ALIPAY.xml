<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline>
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>This is where additional PayPal integration would go. The current implementation simply creates a PaymentInstrument and returns 'success'.</description>
        </text-node>
        <node-display width="2" x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Handle">
    <segment>
      <node>
        <start-node call-mode="private" name="Handle" secure="false"/>
        <node-display x="1" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.selectedPaymentMethodID.value" key="From_0"/>
          <key-binding alias="PaymentMethod" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="!empty(PaymentMethod) &amp;&amp; PaymentMethod.equals(dw.web.Resource.msg('paymentmethodname.alipay','cybersource',null))" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="CybersourceData-RemovePaymentInstrument"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="utils/CreatePaymentInstrument.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="&quot;ALIPAY&quot;" key="PaymentType"/>
                <key-binding alias="true" key="RemoveExisting"/>
                <key-binding alias="PaymentInstrument" key="PaymentInstrument"/>
                <key-binding alias="Basket" key="LineItemCtnr"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                    <bend-point relative-to="target" x="0" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node name="error"/>
                    <node-display x="1" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <end-node name="success"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="error"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>Authorizes a payment using a credit card. The payment is authorized by using the PAYPAL_EXPRESS processor only and setting the order no as the transaction ID. Customizations may use other processors and custom logic to authorize credit card payment.</description>
        </text-node>
        <node-display width="2" x="4" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Authorize">
    <segment>
      <node>
        <start-node call-mode="private" name="Authorize" secure="false"/>
        <node-display x="5" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetPaymentProcessor" pipelet-set-identifier="bc_api">
          <key-binding alias="&quot;CYBERSOURCE_ALIPAY&quot;" key="ID"/>
          <key-binding alias="PaymentProcessor" key="PaymentProcessor"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Just set transaction ID and processor" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="PaymentInstrument.paymentTransaction.paymentProcessor" key="To_1"/>
          <key-binding alias="PaymentProcessor" key="From_1"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="CYBERSOURCE_ALIPAY-AuthorizeAlipay"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b4" source-connector="declined">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="declined"/>
              <node-display x="-1" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b5" source-connector="pending">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <decision-node condition-key="dw.system.Site.getCurrent().getCustomPreferenceValue('CsEndpoint').value.equals('Test')" condition-operator="expr"/>
              <node-display x="1" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <interaction-node transaction-required="false">
                      <template buffered="true" dynamic="false" name="custom/alipayintermediate"/>
                    </interaction-node>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/alipayRedirection"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="AuthorizeAlipay">
    <segment>
      <node>
        <start-node call-mode="private" name="AuthorizeAlipay" secure="false"/>
        <node-display x="9" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.web.URLUtils.https('COPlaceOrder-Submit','provider','alipay','order_token',Order.orderToken)" key="From_0"/>
          <key-binding alias="alipayReturnUrl" key="To_0"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue(&quot;apPaymentType&quot;)" key="From_1"/>
          <key-binding alias="alipayPaymentType" key="To_1"/>
          <key-binding alias="Order.orderNo" key="From_3"/>
          <key-binding alias="CurrentSession.custom.alipayOrderNo" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cybersource-GetCybersourceHelper"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/PurchaseTotals/CreateCSPurchaseTotalForAlipay.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="purchaseTotals" key="CyberSourcePurchaseTotals"/>
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in2" target-path="../b3.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Alipay/AlipaySetProductParameters.ds"/>
          <key-binding alias="scriptlog" key="ScriptLog"/>
          <key-binding alias="productObject" key="productObject"/>
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Alipay/AlipayInitiatePaymentRequest.ds"/>
          <config-property key="Timeout" value="30"/>
          <key-binding alias="scriptlog" key="ScriptLog"/>
          <key-binding alias="purchaseTotals" key="purchaseTotals"/>
          <key-binding alias="alipayReturnUrl" key="returnUrl"/>
          <key-binding alias="Decision" key="Decision"/>
          <key-binding alias="ReasonCode" key="ReasonCode"/>
          <key-binding alias="RequestToken" key="RequestToken"/>
          <key-binding alias="RequestID" key="RequestID"/>
          <key-binding alias="RedirectURL" key="RedirectURL"/>
          <key-binding alias="ReconciliationID" key="ReconciliationID"/>
          <key-binding alias="!empty(OrderNo)?OrderNo:Order.orderNo" key="OrderNo"/>
          <key-binding alias="productObject" key="productObject"/>
          <key-binding alias="InitiatePaymentType" key="InitiatePaymentType"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Decision == 'ACCEPT' &amp;&amp; ReasonCode == 100" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b5" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <key-binding alias="RedirectURL" key="From_0"/>
                <key-binding alias="PaymentInstrument.paymentTransaction.custom.apMerchantURL" key="To_0"/>
                <key-binding alias="ReasonCode" key="From_1"/>
                <key-binding alias="PaymentInstrument.paymentTransaction.custom.approvalStatus" key="To_1"/>
                <key-binding alias="ReconciliationID" key="From_2"/>
                <key-binding alias="PaymentInstrument.paymentTransaction.custom.apInitiatePaymentReconciliationID" key="To_2"/>
                <key-binding alias="RequestID" key="From_3"/>
                <key-binding alias="PaymentInstrument.paymentTransaction.custom.apInitiatePaymentRequestID" key="To_3"/>
                <key-binding alias="RequestToken" key="From_4"/>
                <key-binding alias="PaymentInstrument.paymentTransaction.custom.requestToken" key="To_4"/>
                <key-binding alias="PaymentProcessor" key="From_5"/>
                <key-binding alias="PaymentInstrument.paymentTransaction.paymentProcessor" key="To_5"/>
                <key-binding alias="InitiatePaymentType" key="From_6"/>
                <key-binding alias="PaymentInstrument.paymentTransaction.custom.apInitiatePaymentType" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="Order.orderNo" key="From_0"/>
                <key-binding alias="CurrentSession.privacy.order_id" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="pending"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
          <bend-point relative-to="source" x="1" y="-1"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Decision == 'REJECT' &amp;&amp; (ReasonCode == 102 || ReasonCode == 233)" condition-operator="expr"/>
        <node-display x="1" y="0"/>
        <branch basename="b6" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="declined"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
          <bend-point relative-to="source" x="1" y="-1"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Decision == 'ERROR' &amp;&amp; ReasonCode == 150" condition-operator="expr"/>
        <node-display x="1" y="0"/>
        <branch basename="b7" source-connector="yes">
          <transition target-connector="in1" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
          <bend-point relative-to="source" x="1" y="2"/>
          <bend-point relative-to="target" x="1" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <end-node name="error"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_6">
    <segment>
      <node>
        <text-node>
          <description>This pipeline check the payment status of initiated payment request through alipay and change the status in demandware for placed order to NEW, CREATED, FAILED after getting from service call response in relation to Alipay payment status such as COMPLETED, PENDING, ABANDONED and TRADE_NOT_EXIST.</description>
        </text-node>
        <node-display x="16" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CheckAlipayPaymentStatus">
    <segment>
      <node>
        <start-node call-mode="private" name="CheckAlipayPaymentStatus" secure="false"/>
        <node-display x="16" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Order.getPaymentInstruments(dw.web.Resource.msg('paymentmethodname.alipay','cybersource',null))[0].paymentTransaction.custom.apInitiatePaymentRequestID" key="From_0"/>
          <key-binding alias="RequestID" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="int_cybersource:cybersource/Alipay/AlipayCheckPaymentStatusRequest.ds"/>
          <config-property key="Timeout" value="30"/>
          <key-binding alias="scriptlog" key="ScriptLog"/>
          <key-binding alias="RequestID" key="RequestID"/>
          <key-binding alias="Decision" key="Decision"/>
          <key-binding alias="ReasonCode" key="ReasonCode"/>
          <key-binding alias="ReconciliationID" key="ReconciliationID"/>
          <key-binding alias="!empty(OrderNo)?OrderNo:Order.orderNo" key="OrderNo"/>
          <key-binding alias="PaymentStatus" key="PaymentStatus"/>
          <key-binding alias="RequestToken" key="RequestToken"/>
          <key-binding alias="ProcessorTransactionID" key="ProcessorTransactionID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Decision == 'ACCEPT' &amp;&amp; ReasonCode == 100" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <decision-node condition-key="PaymentStatus =='COMPLETED'" condition-operator="expr"/>
              <node-display x="-2" y="2"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <key-binding alias="PaymentStatus" key="From_0"/>
                      <key-binding alias="Order.getPaymentInstruments(dw.web.Resource.msg('paymentmethodname.alipay','cybersource',null))[0].paymentTransaction.custom.apPaymentStatus" key="To_0"/>
                      <key-binding alias="ReasonCode" key="From_1"/>
                      <key-binding alias="Order.getPaymentInstruments(dw.web.Resource.msg('paymentmethodname.alipay','cybersource',null))[0].paymentTransaction.custom.apCheckStatusServiceApprovalStatus" key="To_1"/>
                      <key-binding alias="ReconciliationID" key="From_2"/>
                      <key-binding alias="Order.getPaymentInstruments(dw.web.Resource.msg('paymentmethodname.alipay','cybersource',null))[0].paymentTransaction.custom.apCheckStatusReconciliationID" key="To_2"/>
                      <key-binding alias="RequestID" key="From_3"/>
                      <key-binding alias="Order.getPaymentInstruments(dw.web.Resource.msg('paymentmethodname.alipay','cybersource',null))[0].paymentTransaction.custom.requestId" key="To_3"/>
                      <key-binding alias="RequestToken" key="From_4"/>
                      <key-binding alias="Order.getPaymentInstruments(dw.web.Resource.msg('paymentmethodname.alipay','cybersource',null))[0].paymentTransaction.custom.apCheckStatusRequestToken" key="To_4"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="ProcessorTransactionID" key="From_5"/>
                      <key-binding alias="Order.getPaymentInstruments(dw.web.Resource.msg('paymentmethodname.alipay','cybersource',null))[0].paymentTransaction.custom.apCheckStatusProcessTransactionID" key="To_5"/>
                      <key-binding alias="Order.paymentStatus" key="To_6"/>
                      <key-binding alias="2" key="From_6"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node name="submit"/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="PaymentStatus =='PENDING'" condition-operator="expr"/>
              <node-display x="1" y="0"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <key-binding alias="PaymentStatus" key="From_0"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apPaymentStatus" key="To_0"/>
                      <key-binding alias="ReasonCode" key="From_1"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apCheckStatusServiceApprovalStatus" key="To_1"/>
                      <key-binding alias="ReconciliationID" key="From_2"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apCheckStatusReconciliationID" key="To_2"/>
                      <key-binding alias="RequestID" key="From_3"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.requestId" key="To_3"/>
                      <key-binding alias="RequestToken" key="From_4"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apCheckStatusRequestToken" key="To_4"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="ProcessorTransactionID" key="From_5"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apCheckStatusProcessTransactionID" key="To_5"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <end-node name="summaryconfirmation"/>
                    <node-display x="0" y="2"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="PaymentStatus =='ABANDONED' || PaymentStatus =='TRADE_NOT_EXIST'" condition-operator="expr"/>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b4" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <key-binding alias="PaymentStatus" key="From_0"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apPaymentStatus" key="To_0"/>
                      <key-binding alias="ReasonCode" key="From_1"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apCheckStatusServiceApprovalStatus" key="To_1"/>
                      <key-binding alias="ReconciliationID" key="From_2"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apCheckStatusReconciliationID" key="To_2"/>
                      <key-binding alias="RequestID" key="From_3"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.requestId" key="To_3"/>
                      <key-binding alias="RequestToken" key="From_4"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apCheckStatusRequestToken" key="To_4"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="ProcessorTransactionID" key="From_5"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apCheckStatusProcessTransactionID" key="To_5"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="-1" y="1"/>
                <bend-point relative-to="target" x="-1" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Decision == 'REJECT'" condition-operator="expr"/>
        <node-display x="1" y="1"/>
        <branch basename="b4" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <decision-node condition-key="ReasonCode == 102" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in1" target-path="./+1"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="ReasonCode == 233" condition-operator="expr"/>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                    <bend-point relative-to="source" x="1" y="1"/>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <key-binding alias="PaymentStatus" key="From_0"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apPaymentStatus" key="To_0"/>
                      <key-binding alias="ReasonCode" key="From_1"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apCheckStatusServiceApprovalStatus" key="To_1"/>
                      <key-binding alias="ReconciliationID" key="From_2"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apCheckStatusReconciliationID" key="To_2"/>
                      <key-binding alias="RequestID" key="From_3"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.requestId" key="To_3"/>
                      <key-binding alias="RequestToken" key="From_4"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apCheckStatusRequestToken" key="To_4"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="ProcessorTransactionID" key="From_5"/>
                      <key-binding alias="Order.getPaymentInstruments(&quot;ALIPAY&quot;)[0].paymentTransaction.custom.apCheckStatusProcessTransactionID" key="To_5"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in3" target-path="../+2">
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="2"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-1" y="1"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="-1" y="-2"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Decision == 'ERROR' &amp;&amp; ReasonCode == 150" condition-operator="expr"/>
        <node-display x="2" y="1"/>
        <branch basename="b5" source-connector="yes">
          <transition target-connector="in1" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
          <bend-point relative-to="target" x="1" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="error"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
