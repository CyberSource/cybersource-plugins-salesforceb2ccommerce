<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline>
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to test Credit Card Authorization</description>
        </text-node>
        <node-display x="0" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_2">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to test Taxation</description>
        </text-node>
        <node-display x="3" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestCCAuth">
    <segment>
      <node>
        <start-node call-mode="public" name="TestCCAuth" secure="true"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestCCAuth.ds"/>
          <config-property key="Timeout" value="30"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="reason" key="ReasonCode"/>
          <key-binding alias="authreason" key="AuthorizationReasonCode"/>
          <key-binding alias="authamount" key="AuthorizationAmount"/>
          <key-binding alias="authcode" key="AuthorizationCode"/>
          <key-binding alias="descision" key="Decision"/>
          <key-binding alias="requestid" key="RequestID"/>
          <key-binding alias="token" key="RequestToken"/>
          <key-binding alias="AVSCode" key="AVSCode"/>
          <key-binding alias="AVSCodeRaw" key="AVSCodeRaw"/>
          <key-binding alias="DAVReasonCode" key="DAVReasonCode"/>
          <key-binding alias="CCAuthResponse" key="CCAuthResponse"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/CCAuthUnitTestResults"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestTax">
    <segment>
      <node>
        <start-node call-mode="public" name="TestTax" secure="true"/>
        <node-display x="3" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestTax.ds"/>
          <config-property key="Timeout" value="30"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="ReasonCode" key="ReasonCode"/>
          <key-binding alias="Decision" key="Decision"/>
          <key-binding alias="RequestID" key="RequestID"/>
          <key-binding alias="RequestToken" key="RequestToken"/>
          <key-binding alias="taxamount" key="totalTaxAmount"/>
          <key-binding alias="DAVReasonCode" key="DAVReasonCode"/>
          <key-binding alias="TaxReply" key="TaxReply"/>
          <key-binding alias="taxResponse" key="taxResponse"/>
          <key-binding alias="Basket" key="Basket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/TaxUnitTestResults"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_6">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="4" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_7">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="6" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestAlipayInitiateService">
    <segment>
      <node>
        <start-node call-mode="public" name="TestAlipayInitiateService" secure="true"/>
        <node-display x="6" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestAlipayInitiateRequest.ds"/>
          <config-property key="Timeout" value="30"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Decision" key="Decision"/>
          <key-binding alias="ReasonCode" key="ReasonCode"/>
          <key-binding alias="ReconciliationID" key="ReconciliationID"/>
          <key-binding alias="RequestID" key="RequestID"/>
          <key-binding alias="RequestToken" key="RequestToken"/>
          <key-binding alias="alipayInitiateResponse" key="alipayInitiateResponse"/>
          <key-binding alias="currency" key="currency"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/AlipayInitiateServiceTestResults"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_9">
    <segment>
      <node>
        <text-node>
          <description>Test delivery address response, authorize if reason code 100. Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="8" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_10">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to make on demand payment using the subscription. Make the pipeline node as public before using</description>
        </text-node>
        <node-display width="2" x="10" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestDAVCheck">
    <segment>
      <node>
        <start-node call-mode="public" name="TestDAVCheck" secure="true"/>
        <node-display x="8" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestDAVRequest.ds"/>
          <config-property key="Timeout" value="30"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DAVReasonCode" key="DAVReasonCode"/>
          <key-binding alias="DAVReasonCode" key="ReasonCode"/>
          <key-binding alias="Decision" key="Decision"/>
          <key-binding alias="RequestID" key="RequestID"/>
          <key-binding alias="RequestToken" key="RequestToken"/>
          <key-binding alias="InvalidFieldsArray" key="InvalidFieldsArray"/>
          <key-binding alias="MissingFieldsArray" key="MissingFieldsArray"/>
          <key-binding alias="StandardizedAddress" key="StandardizedAddress"/>
          <key-binding alias="davResponse" key="davResponse"/>
          <key-binding alias="billto" key="BillTo"/>
          <key-binding alias="shipto" key="ShipTo"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/TestDAVCheckResults"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="OnDemandPayment">
    <segment>
      <node>
        <start-node call-mode="public" name="OnDemandPayment" secure="true"/>
        <node-display x="10" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.subscription" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <description>OnDemandsubscriptionData</description>
                <template buffered="true" dynamic="false" name="services/ondemandsubscriptionform"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestOnDemandSubscription.ds"/>
          <config-property key="Timeout" value="30"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CurrentForms.subscription.subscriptionID.htmlValue" key="subscriptionID"/>
          <key-binding alias="amount" key="amount"/>
          <key-binding alias="authorizationCode" key="authorizationCode"/>
          <key-binding alias="decision" key="decision"/>
          <key-binding alias="processorResponse" key="processorResponse"/>
          <key-binding alias="reasonCode" key="reasonCode"/>
          <key-binding alias="reconciliationID" key="reconciliationID"/>
          <key-binding alias="requestID" key="requestID"/>
          <key-binding alias="requestToken" key="requestToken"/>
          <key-binding alias="authorizedDateTime" key="authorizedDateTime"/>
          <key-binding alias="invalidField" key="invalidField"/>
          <key-binding alias="missingField" key="missingField"/>
          <key-binding alias="CurrentForms.subscription.amount.htmlValue" key="purchaseamount"/>
          <key-binding alias="CurrentForms.subscription.currency.htmlValue" key="currency"/>
          <key-binding alias="response" key="response"/>
          <key-binding alias="response" key="Result"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.subscription" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.subscription" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/ondemandsubscriptionresult"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_13">
    <segment>
      <node>
        <text-node>
          <description>Test Payer Authorization, authorize if PAReasonCode 100</description>
        </text-node>
        <node-display x="14" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_14">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="15" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestPA">
    <segment>
      <node>
        <start-node call-mode="public" name="TestPA" secure="true"/>
        <node-display x="14" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.MD.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <decision-node condition-key="empty(CurrentHttpParameterMap.PAResponseMD.stringValue)" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node custom-name="Check enrollment" pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="ScriptFile" value="unitTesting/TestPayerAuthEnrollCheck.ds"/>
                      <config-property key="Transactional" value="false"/>
                      <config-property key="OnError" value="PIPELET_ERROR"/>
                      <config-property key="Timeout" value="30"/>
                      <key-binding alias="log" key="ScriptLog"/>
                      <key-binding alias="PADecission" key="Decision"/>
                      <key-binding alias="PAReasonCode" key="ReasonCode"/>
                      <key-binding alias="PARequestID" key="RequestID"/>
                      <key-binding alias="PARequestToken" key="RequestToken"/>
                      <key-binding alias="CommerceIndicator" key="CommerceIndicator"/>
                      <key-binding alias="ProofXML" key="ProofXML"/>
                      <key-binding alias="AcsURL" key="AcsURL"/>
                      <key-binding alias="PAReq" key="PAReq"/>
                      <key-binding alias="ProxyPAN" key="ProxyPAN"/>
                      <key-binding alias="PAXID" key="XID"/>
                      <key-binding alias="PayerAuthEnrollResponseObj" key="ResponseObject"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <decision-node condition-key="PAReasonCode == 100" condition-operator="expr"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node custom-name="Remove reason code from PD" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <key-binding alias="''" key="From_0"/>
                            <key-binding alias="PAReasonCode" key="To_0"/>
                            <key-binding alias="null" key="From_1"/>
                            <key-binding alias="null" key="To_1"/>
                            <key-binding alias="null" key="From_2"/>
                            <key-binding alias="null" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="1"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <interaction-node transaction-required="false">
                            <template buffered="true" dynamic="false" name="services/PATestResult.isml"/>
                          </interaction-node>
                          <node-display x="0" y="1"/>
                        </node>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="2" y="0"/>
                      <bend-point relative-to="target" x="0" y="-1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <decision-node condition-key="!empty(AcsURL)" condition-operator="expr"/>
                    <node-display x="1" y="1"/>
                    <branch basename="b3" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node custom-name="Remove reason code from PD" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <key-binding alias="''" key="From_0"/>
                            <key-binding alias="PAReasonCode" key="To_0"/>
                            <key-binding alias="null" key="From_1"/>
                            <key-binding alias="null" key="To_1"/>
                            <key-binding alias="null" key="From_2"/>
                            <key-binding alias="null" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition/>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="PayerAuthEnrollResponseObj" key="From_0"/>
                            <key-binding alias="CurrentSession.custom.PayerAuthEnrollResponseObj" key="To_0"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition/>
                        <node>
                          <interaction-node transaction-required="false">
                            <template buffered="true" dynamic="false" name="services/payerauthenticationtest"/>
                          </interaction-node>
                          <node-display x="0" y="1"/>
                        </node>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="2" y="0"/>
                      <bend-point relative-to="target" x="0" y="-1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <pipelet-node custom-name="Log error" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <key-binding alias="dw.system.Logger.error('An error occured during PayerAuthEnroll check. (ReasonCode: {0} , RequestID: {1}',PAReasonCode,PARequestID)" key="From_0"/>
                      <key-binding alias="null" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="1" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <interaction-node transaction-required="false">
                      <template buffered="true" dynamic="false" name="services/PATestResult.isml"/>
                    </interaction-node>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="CurrentSession.custom.PayerAuthEnrollResponseObj" key="From_0"/>
                <key-binding alias="PayerAuthEnrollResponseObj" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="CurrentSession.custom.PayerAuthEnrollResponseObj" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="!empty(PayerAuthEnrollResponseObj)" condition-operator="expr"/>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                    <bend-point relative-to="target" x="0" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="PayerAuthEnrollResponseObj.payerAuthEnrollReply!= null?PayerAuthEnrollResponseObj.AcsURL:null" key="From_0"/>
                      <key-binding alias="AcsURL" key="To_0"/>
                      <key-binding alias="PayerAuthEnrollResponseObj.payerAuthEnrollReply!= null?PayerAuthEnrollResponseObj.CommerceIndicator:null" key="From_1"/>
                      <key-binding alias="CommerceIndicator" key="To_1"/>
                      <key-binding alias="PayerAuthEnrollResponseObj.Decision" key="From_2"/>
                      <key-binding alias="PADecission" key="To_2"/>
                      <key-binding alias="PayerAuthEnrollResponseObj.payerAuthEnrollReply!= null?PayerAuthEnrollResponseObj.PAReq:null" key="From_3"/>
                      <key-binding alias="PAReq" key="To_3"/>
                      <key-binding alias="PayerAuthEnrollResponseObj.payerAuthEnrollReply!= null?PayerAuthEnrollResponseObj.ProxyPAN:null" key="From_5"/>
                      <key-binding alias="ProxyPAN" key="To_5"/>
                      <key-binding alias="PayerAuthEnrollResponseObj.RequestID" key="From_6"/>
                      <key-binding alias="PARequestID" key="To_6"/>
                      <key-binding alias="PayerAuthEnrollResponseObj.RequestToken" key="From_7"/>
                      <key-binding alias="PARequestToken" key="To_7"/>
                      <key-binding alias="PayerAuthEnrollResponseObj.payerAuthEnrollReply!= null?PayerAuthEnrollResponseObj.XID:null" key="From_8"/>
                      <key-binding alias="PAXID" key="To_8"/>
                      <key-binding alias="PayerAuthEnrollResponseObj.payerAuthEnrollReply!= null?PayerAuthEnrollResponseObj.ProofXML:null" key="From_9"/>
                      <key-binding alias="ProofXML" key="To_9"/>
                    </pipelet-node>
                    <node-display x="1" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="AcsURL" key="To_0"/>
                <key-binding alias="CommerceIndicator" key="To_1"/>
                <key-binding alias="PADecission" key="To_2"/>
                <key-binding alias="PAReq" key="To_3"/>
                <key-binding alias="ProxyPAN" key="To_5"/>
                <key-binding alias="PARequestID" key="To_6"/>
                <key-binding alias="PARequestToken" key="To_7"/>
                <key-binding alias="PAXID" key="To_8"/>
                <key-binding alias="ProofXML" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in2" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="2"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="CurrentHttpParameterMap.PAResponseMD.stringValue" key="From_1"/>
                <key-binding alias="PAResponseMD" key="To_1"/>
                <key-binding alias="PayerAuthEnrollResponseObj" key="From_2"/>
                <key-binding alias="PAResponse" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="CurrentHttpParameterMap.PAResponsePARes.stringValue" key="From_0"/>
                <key-binding alias="PAResponsePARes" key="To_0"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="PAResponseMD == CurrentSession.sessionID" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="ScriptFile" value="unitTesting/TestPayerAuthValidation.ds"/>
                      <config-property key="Transactional" value="false"/>
                      <config-property key="Timeout" value="30"/>
                      <key-binding alias="PAVResult" key="AuthenticationResult"/>
                      <key-binding alias="PAVStatusMessage" key="AuthenticationStatusMessage"/>
                      <key-binding alias="CAVV" key="CAVV"/>
                      <key-binding alias="PAVCommerceIndicator" key="CommerceIndicator"/>
                      <key-binding alias="PAVDecision" key="Decision"/>
                      <key-binding alias="PAVReasonCode" key="ReasonCode"/>
                      <key-binding alias="PAVRequestID" key="RequestID"/>
                      <key-binding alias="PAVRequestToken" key="RequestToken"/>
                      <key-binding alias="PAVXID" key="XID"/>
                      <key-binding alias="UCAFAuthenticationData" key="UCAFAuthenticationData"/>
                      <key-binding alias="UCAFCollectionIndicator" key="UCAFCollectionIndicator"/>
                      <key-binding alias="ECIRaw" key="ECIRaw"/>
                      <key-binding alias="PAResponsePARes" key="PaRes"/>
                      <key-binding alias="ParesStatus" key="ParesStatus"/>
                      <key-binding alias="log" key="ScriptLog"/>
                      <key-binding alias="PAVResponse" key="PAVResponse"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="error">
                      <transition target-connector="in2" target-path="./b3.2">
                        <transition-display>
                          <bend-point relative-to="target" x="0" y="-2"/>
                        </transition-display>
                      </transition>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <decision-node condition-key="(PAVReasonCode == 100)" condition-operator="expr"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b3" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <decision-node condition-key="(PAXID == PAVXID)" condition-operator="expr"/>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="yes">
                            <transition target-connector="in">
                              <transition-display>
                                <bend-point relative-to="source" x="0" y="1"/>
                              </transition-display>
                            </transition>
                            <segment>
                              <node>
                                <interaction-node transaction-required="false">
                                  <template buffered="true" dynamic="false" name="services/PATestResult.isml"/>
                                </interaction-node>
                                <node-display x="0" y="1"/>
                              </node>
                            </segment>
                          </branch>
                        </node>
                        <transition target-connector="in1" target-path="./+1">
                          <transition-display>
                            <bend-point relative-to="target" x="0" y="2"/>
                          </transition-display>
                        </transition>
                      </segment>
                      <segment>
                        <node>
                          <join-node/>
                          <node-display x="2" y="-1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="1" y="0"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <interaction-node transaction-required="false">
                            <template buffered="true" dynamic="false" name="services/PATestResult.isml"/>
                          </interaction-node>
                          <node-display orientation="horizontal" x="1" y="0"/>
                        </node>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <interaction-node transaction-required="false">
                      <template buffered="true" dynamic="false" name="services/PATestResult.isml"/>
                    </interaction-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="services/PATestResult.isml"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Save response values" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentHttpParameterMap.MD.stringValue" key="From_0"/>
          <key-binding alias="PAResponseMD" key="To_0"/>
          <key-binding alias="CurrentHttpParameterMap.PaRes.stringValue" key="From_1"/>
          <key-binding alias="PAResponsePARes" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/payerauthenticationredirecttest"/>
        </interaction-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_16">
    <segment>
      <node>
        <text-node>
          <description>This pipeline initiates the test suit for Different Cybersource services like Auth Reversal. Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="0" y="6"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_17">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to test finger print. Make it Public before use.</description>
        </text-node>
        <node-display x="2" y="6"/>
      </node>
    </segment>
  </branch>
  <branch basename="StartServices">
    <segment>
      <node>
        <start-node call-mode="public" name="StartServices" secure="true"/>
        <node-display x="0" y="7"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/services"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestFingerprint">
    <segment>
      <node>
        <start-node call-mode="public" name="TestFingerprint" secure="true"/>
        <node-display x="2" y="7"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/TestFingerPrintRedirect"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_20">
    <segment>
      <node>
        <text-node>
          <description>Standalone pipleline to test the response fron the  create token service</description>
        </text-node>
        <node-display x="4" y="6"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_21">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="6" y="6"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestSATokenCreateResponse">
    <segment>
      <node>
        <start-node call-mode="public" name="TestSATokenCreateResponse" secure="true"/>
        <node-display x="4" y="7"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/secureAcceptanceCreateTokenResponse"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="StartPOS">
    <segment>
      <node>
        <start-node call-mode="public" name="StartPOS" secure="true"/>
        <node-display x="6" y="7"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="CYBServicesTesting-TestAuthorizePOS"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="pos/postransactionresult"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_24">
    <segment>
      <node>
        <text-node>
          <description>Standalone pipleline to test the create token service</description>
        </text-node>
        <node-display x="8" y="6"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_25">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to make on demand payment using the subscription. Make the pipeline node as public before using</description>
        </text-node>
        <node-display width="2" x="10" y="6"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestSATokenCreate">
    <segment>
      <node>
        <start-node call-mode="public" name="TestSATokenCreate" secure="false"/>
        <node-display x="8" y="7"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="ScriptFile" value="unitTesting/TestSACreateToken.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourceBillTo" key="billTo"/>
          <key-binding alias="CybersourcePurchaseTotals" key="purchaseTotals"/>
          <key-binding alias="CybersourceShipTo" key="shipTo"/>
          <key-binding alias="formAction" key="formAction"/>
          <key-binding alias="requestData" key="requestData"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/secureAcceptanceRequestForm"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="OnDemandPaymentAccount">
    <segment>
      <node>
        <start-node call-mode="public" name="OnDemandPaymentAccount" secure="false"/>
        <node-display x="10" y="7"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Subscription/OnDemandSubscription.ds"/>
          <config-property key="Timeout" value="30"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="PaymentInstrument.creditCardNumber" key="subscriptionID"/>
          <key-binding alias="amount" key="amount"/>
          <key-binding alias="authorizationCode" key="authorizationCode"/>
          <key-binding alias="decision" key="decision"/>
          <key-binding alias="processorResponse" key="processorResponse"/>
          <key-binding alias="reasonCode" key="reasonCode"/>
          <key-binding alias="reconciliationID" key="reconciliationID"/>
          <key-binding alias="requestID" key="requestID"/>
          <key-binding alias="requestToken" key="requestToken"/>
          <key-binding alias="authorizedDateTime" key="authorizedDateTime"/>
          <key-binding alias="invalidField" key="invalidField"/>
          <key-binding alias="missingField" key="missingField"/>
          <key-binding alias="billto" key="billTo"/>
          <key-binding alias="shipto" key="shipTo"/>
          <key-binding alias="DAVReasonCode" key="DAVReasonCode"/>
          <key-binding alias="StandardizedAddress" key="StandardizedAddress"/>
          <key-binding alias="authReasonCode" key="authReasonCode"/>
          <key-binding alias="Basket.orderNo" key="OrderID"/>
          <key-binding alias="&quot;&quot;+PaymentInstrument.paymentTransaction.amount.value" key="purchaseamount"/>
          <key-binding alias="&quot;&quot;+PaymentInstrument.paymentTransaction.amount.currencyCode" key="currency"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/ondemandsubscriptionresult"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_28">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to view saved subscription information from CyberSource. Make the pipeline node as public before using</description>
        </text-node>
        <node-display width="2" x="0" y="11"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_29">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create subscription with test data, Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="4" y="11"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_30">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to update the subscription profile saved on  CyberSource servers. Make the pipeline node as public before using</description>
        </text-node>
        <node-display width="2" x="8" y="11"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_31">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to delete subscription from CyberSource servers. Make the pipeline node as public before using</description>
        </text-node>
        <node-display width="2" x="12" y="11"/>
      </node>
    </segment>
  </branch>
  <branch basename="ViewSubscription">
    <segment>
      <node>
        <start-node call-mode="public" name="ViewSubscription" secure="true"/>
        <node-display x="0" y="12"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="dw.web.URLUtils.https('CYBServicesTesting-ViewSubscription','service','view')" key="From_0"/>
                <key-binding alias="subscriptionaction" key="To_0"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.subscription" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <description>ViewSubscriptionData</description>
                <template buffered="true" dynamic="false" name="services/viewsubscriptionform"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="0"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Subscription/ViewSubscription.ds"/>
          <config-property key="Timeout" value="30"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="decision" key="decision"/>
          <key-binding alias="invalidField" key="invalidField"/>
          <key-binding alias="reasonCode" key="reasonCode"/>
          <key-binding alias="requestID" key="requestID"/>
          <key-binding alias="requestToken" key="requestToken"/>
          <key-binding alias="missingField" key="missingField"/>
          <key-binding alias="CurrentForms.subscription.subscriptionID.htmlValue" key="subscriptionID"/>
          <key-binding alias="response" key="viewSubscriptionResponse"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.subscription" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.subscription" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/viewsubscriptionresult"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateSubscription">
    <segment>
      <node>
        <start-node call-mode="public" name="CreateSubscription" secure="true"/>
        <node-display x="4" y="12"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.subscription" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <description>CreateSubscriptionData</description>
                <template buffered="true" dynamic="false" name="services/createsubscription"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestCreateSubscription.ds"/>
          <config-property key="Timeout" value="30"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="subscriptionID" key="SubscriptionIDToken"/>
          <key-binding alias="decision" key="decision"/>
          <key-binding alias="invalidField" key="invalidField"/>
          <key-binding alias="reasonCode" key="reasonCode"/>
          <key-binding alias="requestID" key="requestID"/>
          <key-binding alias="requestToken" key="requestToken"/>
          <key-binding alias="missingField" key="missingField"/>
          <key-binding alias="subscriptionResponse" key="subscriptionResponse"/>
          <key-binding alias="CurrentForms.subscription.amount.htmlValue" key="amount"/>
          <key-binding alias="CurrentForms.subscription.currency.htmlValue" key="currency"/>
          <key-binding alias="&quot;subscription&quot;" key="formType"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.subscription" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.subscription" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/createsubscriptionresult"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdateSubscription">
    <segment>
      <node>
        <start-node call-mode="public" name="UpdateSubscription" secure="true">
          <description>Updates a Subscription ID (Profile) on Cybersource End with specific data</description>
        </start-node>
        <node-display x="8" y="12"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.subscription" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <description>UpdateSubscriptionData</description>
                <template buffered="true" dynamic="false" name="services/updatesubscriptionform"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Subscription/UpdateSubscription.ds"/>
          <config-property key="Timeout" value="30"/>
          <key-binding alias="CurrentForms.subscription.subscriptionID.htmlValue" key="storedSubscriptionID"/>
          <key-binding alias="NewSubscriptionID" key="NewSubscriptionID"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="decision" key="decision"/>
          <key-binding alias="invalidField" key="invalidField"/>
          <key-binding alias="missingField" key="missingField"/>
          <key-binding alias="reasonCode" key="reasonCode"/>
          <key-binding alias="requestID" key="requestID"/>
          <key-binding alias="requestToken" key="requestToken"/>
          <key-binding alias="&quot;subscription&quot;" key="formType"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.subscription" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.subscription" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/updatesubscriptionresult"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="DeleteSubscription">
    <segment>
      <node>
        <start-node call-mode="public" name="DeleteSubscription" secure="true"/>
        <node-display x="12" y="12"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="dw.web.URLUtils.https('CYBServicesTesting-DeleteSubscription','service','delete')" key="From_0"/>
                <key-binding alias="subscriptionaction" key="To_0"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="deletesubscription" key="To_1"/>
                <key-binding alias="true" key="From_1"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.subscription" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <description>DeleteSubscriptionData</description>
                <template buffered="true" dynamic="false" name="services/viewsubscriptionform"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Subscription/DeleteSubscription.ds"/>
          <config-property key="Timeout" value="30"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="decision" key="decision"/>
          <key-binding alias="invalidField" key="invalidField"/>
          <key-binding alias="reasonCode" key="reasonCode"/>
          <key-binding alias="requestID" key="requestID"/>
          <key-binding alias="requestToken" key="requestToken"/>
          <key-binding alias="missingField" key="missingField"/>
          <key-binding alias="CurrentForms.subscription.subscriptionID.htmlValue" key="subscriptionID"/>
          <key-binding alias="serviceResponse" key="viewSubscriptionResponse"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.subscription" key="FormElement"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.subscription" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/deletesubscriptionresult"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_36">
    <segment>
      <node>
        <text-node>
          <description>This is the pipeline created for Unit Testing purpose.</description>
        </text-node>
        <node-display x="21" y="12"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestAuthorizePOS">
    <segment>
      <node>
        <start-node call-mode="private" name="TestAuthorizePOS" secure="true"/>
        <node-display x="21" y="13"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="&quot;CYBServicesTesting-StartPOS&quot;" key="From_0"/>
          <key-binding alias="ActionPOS" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.pos" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentForms.pos.valid" condition-operator="expr"/>
        <node-display orientation="horizontal" x="1" y="0"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="-1"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <decision-node condition-key="CurrentForms.pos.entryMode.htmlValue.equals(&quot;keyed&quot;)" condition-operator="expr">
                <description>Check if entry mode is keyed or swiped.</description>
              </decision-node>
              <node-display x="0" y="3"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in1" target-path="./+1"/>
              </branch>
            </node>
            <transition target-connector="in2" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
                <bend-point relative-to="target" x="1" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="unitTesting/TestPOSAuth.ds"/>
                <config-property key="Timeout" value="30"/>
                <key-binding alias="log" key="ScriptLog"/>
                <key-binding alias="reasonCode" key="ReasonCode"/>
                <key-binding alias="authReasonCode" key="AuthorizationReasonCode"/>
                <key-binding alias="authAmount" key="AuthorizationAmount"/>
                <key-binding alias="authCode" key="AuthorizationCode"/>
                <key-binding alias="decision" key="Decision"/>
                <key-binding alias="requestID" key="RequestID"/>
                <key-binding alias="CybersourcePurchaseTotal" key="purchaseTotals"/>
                <key-binding alias="avsCode" key="AVSCode"/>
                <key-binding alias="avsCodeRaw" key="AVSCodeRaw"/>
                <key-binding alias="CybersourcePos" key="pos"/>
                <key-binding alias="invalidField" key="InvalidField"/>
                <key-binding alias="merchantRefCode" key="MerchantReferenceCode"/>
                <key-binding alias="missingField" key="MissingField"/>
                <key-binding alias="authCardCategory" key="AuthReplyCardCategory"/>
                <key-binding alias="authCardGroup" key="AuthReplyCardGroup"/>
                <key-binding alias="authPaymentTransID" key="AuthReplyPaymentNetworkTransactionID"/>
                <key-binding alias="authProcessorResponse" key="AuthReplyProcessorResponse"/>
                <key-binding alias="authReconciliationID" key="AuthReplyReconciliationID"/>
                <key-binding alias="captureAmount" key="CaptureReplyAmount"/>
                <key-binding alias="captureReasonCode" key="CaptureReplyReasonCode"/>
                <key-binding alias="captureReconciliationID" key="CaptureReplyReconciliationID"/>
                <key-binding alias="purchaseTotalCurrency" key="PurchaseTotalsCurrency"/>
                <key-binding alias="receiptNumber" key="ReceiptNumber"/>
                <key-binding alias="CurrentForms.pos.storeLocation.htmlValue" key="location"/>
                <key-binding alias="CybersourcePaymentCard" key="card"/>
                <key-binding alias="posAuthResponse" key="posAuthResponse"/>
                <key-binding alias="CurrentForms.pos.accountNumber.htmlValue" key="accountNumber"/>
                <key-binding alias="CurrentForms.pos.cardType.htmlValue" key="cardType"/>
                <key-binding alias="CurrentForms.pos.cvnNumber.htmlValue" key="cvnNumber"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1"/>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="1" y="0"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                      <key-binding alias="CurrentForms.pos" key="FormElement"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node name="error"/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.pos" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in3" target-path="./+1">
        <transition-display>
          <bend-point relative-to="target" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <description>CreatePOSData</description>
          <template buffered="true" dynamic="false" name="pos/createpos"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_38">
    <segment>
      <node>
        <text-node>
          <description>Test Pipelien to test Authorize POS for checkout flow</description>
        </text-node>
        <node-display x="24" y="12"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestPOS">
    <segment>
      <node>
        <start-node call-mode="public" name="TestPOS" secure="true"/>
        <node-display x="24" y="13"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="&quot;CYBServicesTesting-TestPOS&quot;" key="From_0"/>
          <key-binding alias="ActionPOS" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.pos" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentForms.pos.valid" condition-operator="expr"/>
        <node-display orientation="horizontal" x="1" y="0"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="CurrentForms.pos.cardPresent.htmlValue" key="From_0"/>
                <key-binding alias="CurrentForms.pos.currency.htmlValue" key="From_5"/>
                <key-binding alias="currency" key="To_5"/>
                <key-binding alias="CurrentForms.pos.amount.htmlValue" key="From_6"/>
                <key-binding alias="amount" key="To_6"/>
                <key-binding alias="CurrentForms.pos.storeLocation.htmlValue" key="From_7"/>
                <key-binding alias="storeLocation" key="To_7"/>
                <key-binding alias="&quot;POS&quot;" key="From_8"/>
                <key-binding alias="pos_ordernumber" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="cardPresent" key="To_0"/>
                <key-binding alias="CurrentForms.pos.terminalID.htmlValue" key="From_1"/>
                <key-binding alias="CurrentForms.pos.catLevel.htmlValue" key="From_2"/>
                <key-binding alias="CurrentForms.pos.entryMode.htmlValue" key="From_3"/>
                <key-binding alias="CurrentForms.pos.terminalCapability.htmlValue" key="From_4"/>
                <key-binding alias="terminalCapability" key="To_4"/>
                <key-binding alias="entryMode" key="To_3"/>
                <key-binding alias="catLevel" key="To_2"/>
                <key-binding alias="terminalID" key="To_1"/>
              </pipelet-node>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="CurrentForms.pos.entryMode.htmlValue.equals(&quot;keyed&quot;)" condition-operator="expr">
                <description>Check if entry mode is keyed or swiped.</description>
              </decision-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="CurrentForms.pos.accountNumber.htmlValue" key="From_0"/>
                      <key-binding alias="accountNumber" key="To_0"/>
                      <key-binding alias="CurrentForms.pos.cardType.htmlValue" key="From_1"/>
                      <key-binding alias="cardType" key="To_1"/>
                      <key-binding alias="CurrentForms.pos.cvnNumber.htmlValue" key="From_2"/>
                      <key-binding alias="cvnNumber" key="To_2"/>
                      <key-binding alias="CurrentForms.pos.expiryMonth.htmlValue" key="From_3"/>
                      <key-binding alias="expiryMonth" key="To_3"/>
                      <key-binding alias="CurrentForms.pos.expiryYear.htmlValue" key="From_4"/>
                      <key-binding alias="expiryYear" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="CurrentForms.pos.trackData.htmlValue" key="From_0"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="trackData" key="To_0"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <transition target-connector="in3" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-1" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="CYBPos-AuthorizePOS"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.pos" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="pos/postransactionresult"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in3" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <description>CreatePOSData</description>
          <template buffered="true" dynamic="false" name="pos/createpos"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_40">
    <segment>
      <node>
        <text-node>
          <description>This is a generic pipeline to be used to test Auth Reversal service.Covers Klarna,PayPal and Credit card</description>
        </text-node>
        <node-display width="2" x="0" y="20"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_41">
    <segment>
      <node>
        <text-node>
          <description>This is a generic pipeline to be used to test Tax service.Covers every APM,say,Klarna,PayPal and all Bank transfer payment methods</description>
        </text-node>
        <node-display width="2" x="3" y="20"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestAuthReversalService">
    <segment>
      <node>
        <start-node call-mode="public" name="TestAuthReversalService" secure="false"/>
        <node-display x="0" y="21"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="services/authreversalform"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestAuthReversal.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="subscriptionID" key="SubscriptionIDToken"/>
          <key-binding alias="decision" key="decision"/>
          <key-binding alias="invalidField" key="invalidField"/>
          <key-binding alias="reasonCode" key="reasonCode"/>
          <key-binding alias="requestID" key="requestID"/>
          <key-binding alias="requestToken" key="requestToken"/>
          <key-binding alias="missingField" key="missingField"/>
          <key-binding alias="CurrentForms.subscription.authorizationID.htmlValue" key="authorizationID"/>
          <key-binding alias="reversalResponse" key="reversalResponse"/>
          <key-binding alias="CurrentForms.subscription.currency.htmlValue" key="currency"/>
          <key-binding alias="CurrentForms.subscription.amount.htmlValue" key="amount"/>
          <key-binding alias="response" key="Result"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/serviceresult.isml"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestSaleService">
    <segment>
      <node>
        <start-node name="TestSaleService" secure="false"/>
        <node-display x="3" y="21"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="services/saleserviceform"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestSaleService.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentForms" key="CurrentForm"/>
          <key-binding alias="response" key="Result"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/serviceresult.isml"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_44">
    <segment>
      <node>
        <text-node>
          <description>This is a generic pipeline to be used to test Authorize service.Covers APM Klarna &amp; PayPal</description>
        </text-node>
        <node-display x="6" y="20"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestAuthorizeService">
    <segment>
      <node>
        <start-node name="TestAuthorizeService" secure="false"/>
        <node-display x="6" y="21"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.service.empty" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="services/authorizeserviceform"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestAuthorizeService.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentForms" key="CurrentForm"/>
          <key-binding alias="response" key="Result"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/serviceresult.isml"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_46">
    <segment>
      <node>
        <text-node>
          <description>This is a generic pipeline to be used to test Refund service.Covers every APM,say,Klarna,PayPal and all Bank transfer payment methods</description>
        </text-node>
        <node-display width="2" x="9" y="20"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestRefundService">
    <segment>
      <node>
        <start-node name="TestRefundService" secure="false"/>
        <node-display x="9" y="21"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="services/refundserviceform.isml"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestRefundService.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CurrentForms" key="CurrentForm"/>
          <key-binding alias="response" key="Result"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/serviceresult.isml"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_48">
    <segment>
      <node>
        <text-node>
          <description>This pipeline to be used to test Cancel service for PayPal.</description>
        </text-node>
        <node-display x="12" y="20"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_49">
    <segment>
      <node>
        <text-node>
          <description>This pipeline to be used to test Capture service for PayPal,klarna,Visa and Credit card</description>
        </text-node>
        <node-display x="15" y="20"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestCancelService">
    <segment>
      <node>
        <start-node name="TestCancelService" secure="false"/>
        <node-display x="12" y="21"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="services/cancelserviceform.isml"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestCancelService.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="response" key="Result"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/serviceresult.isml"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestCaptureService">
    <segment>
      <node>
        <start-node name="TestCaptureService" secure="false"/>
        <node-display x="15" y="21"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="services/captureserviceform.isml"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestCaptureRequest.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="response" key="Result"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/serviceresult.isml"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_52">
    <segment>
      <node>
        <text-node>
          <description>This pipeline to be used to test Check Status service for PayPal,klarna and all Bank transfer APMs</description>
        </text-node>
        <node-display x="18" y="20"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestCheckStatusService">
    <segment>
      <node>
        <start-node name="TestCheckStatusService" secure="false"/>
        <node-display x="18" y="21"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.service.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="services/checkstatusserviceform"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="unitTesting/TestCheckStatusRequest.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="response" key="Result"/>
          <key-binding alias="CurrentForms.generictestinterfaceform" key="CurrentForms"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.generictestinterfaceform" key="FormElement"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="common/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="services/serviceresult.isml"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
