/**
*
* @input profile : Object
* @output savedCardlimitReached : Boolean
*
*/

var Logger = require('dw/system/Logger');
var Site = require('dw/system/Site');
var cyberSourceHelper = require('int_cybersource/cartridge/scripts/cybersource/libCybersource').getCybersourceHelper();
	

function execute( pdict : PipelineDictionary ) : Number
{
	var profile = pdict.profile;
    var LimitSavedCardRateEnabled = !empty(cyberSourceHelper.getLimitSavedCardRate())? cyberSourceHelper.getLimitSavedCardRate() : false;
    
	if (LimitSavedCardRateEnabled) {
		try{
				var SavedCardLimitTimeFrame = !empty(cyberSourceHelper.getSavedCardLimitTimeFrame())? cyberSourceHelper.getSavedCardLimitTimeFrame() : 0;
	        	var SavedCardLimitCount = !empty(cyberSourceHelper.getSavedCardLimitFrame())? cyberSourceHelper.getSavedCardLimitFrame() : 0;
	        	
	        	if ('savedCCRateLookBack' in profile.custom && !empty(profile.custom.savedCCRateLookBack)) {
					var customerTime =  profile.custom.savedCCRateLookBack;
	    			var currentTime = new Date();
	    			var difference = new Date().setTime(Math.abs(currentTime-customerTime));
	    			var differenceInSec = Math.floor(difference/1000);
	    			if ( differenceInSec <  SavedCardLimitTimeFrame * 60 * 60) {
	    				if ('savedCCRateCount' in profile.custom && (profile.custom.savedCCRateCount < SavedCardLimitCount)) {	
        	    			profile.custom.savedCCRateCount = profile.custom.savedCCRateCount + 1;		
    					} else {
    						pdict.savedCardlimitReached = true;
    						return PIPELET_ERROR;
    					}
	    			} else {
	    				profile.custom.savedCCRateLookBack = new Date();
						profile.custom.savedCCRateCount = 1;
	    			}
				} else {		
					profile.custom.savedCCRateLookBack = new Date();
					profile.custom.savedCCRateCount = 1;
    			}
			} catch(e) {
				Logger.error("Error Processed while adding card: ",e.message);
			}
	} 	
	return PIPELET_NEXT;
}

