/**
* Performs the validation of the addresses of a given basket.
*
* @input Basket : dw.order.LineItemCtnr The basket whose address should be validated
* @input  billTo : Object
* @input  shipTo : Object
*
* @output Decision : String The decision of the complete request, one of ACCEPT, REJECT, or ERROR
* @output ReasonCode : Number The global reason code returned by Cybersource (100 = Success)
* @output RequestID : String The request id generated by Cybersource
* @output RequestToken : String the token generated by Cybersource
* @output DAVReasonCode : Number The DAV reason code returned by Cybersource (100 = Success)
*/

var CardFacade = require('int_cybersource/cartridge/scripts/facade/CardFacade');
function execute( pdict : PipelineDictionary ) : Number
{
    // read pipeline dictionary input parameter
    var basket = pdict.Basket;

	if( basket == null ){
		Logger.error("Please provide a Basket!");
		return PIPELET_ERROR;
	}

    var result = CardFacade.DAVRequest(basket, pdict.billTo, pdict.shipTo);
    if (result.error) {
		return PIPELET_ERROR;
	}
	var serviceResponse = result.serviceResponse;
	pdict.RequestID = serviceResponse.RequestID;
	pdict.RequestToken = serviceResponse.RequestToken;
	pdict.ReasonCode = serviceResponse.ReasonCode;
	pdict.Decision = serviceResponse.Decision;
	
	if(null !== serviceResponse.davReply){
		pdict.DAVReasonCode = serviceResponse.DAVReasonCode;
	}
    return PIPELET_NEXT;
}
