/**
 * UpdateVisaCheckoutShipment.ds
 * updates an order shipment with the Visa Checkout address details.
 *
 * This script additionally sets the shipping method to the default.
 *
 * @input Shipment : dw.order.Shipment The shipment to create or update
 * @input VisaDecrypted : Object The Visa Checkout decrypted object
 */
var logger = require('dw/system/Logger');
var ShippingMgr = require('dw/order/ShippingMgr');
var BasketMgr = require('dw/order/BasketMgr'); 
var CybersourceConstants = require('int_cybersource/cartridge/scripts/utils/CybersourceConstants');
var VisaCheckoutHelper = require(CybersourceConstants.CS_CORE_SCRIPT+'visacheckout/helper/VisaCheckoutHelper');
var VisaCheckoutAdaptor = require(CybersourceConstants.CS_CORE_SCRIPT+'visacheckout/adaptor/VisaCheckoutAdaptor');

function execute( pdict : PipelineDictionary ) : Number
{
	
	try{
			if(!empty(pdict.VisaDecrypted))
			{
				var result = VisaCheckoutAdaptor.UpdateShipping(pdict.VisaDecrypted);
				if(result.success)
				{
					var basket = BasketMgr.getCurrentOrNewBasket();
					dw.system.HookMgr.callHook( "dw.order.calculate", "calculate",basket);
					return PIPELET_NEXT;
				}
				else
					return PIPELET_ERROR;	
			}else
				return PIPELET_ERROR;
		}
		catch(err)
		{
			logger.error('Error creating shipment from Visa Checkout address: {0}', err.message);
			return PIPELET_ERROR;	
		}
}