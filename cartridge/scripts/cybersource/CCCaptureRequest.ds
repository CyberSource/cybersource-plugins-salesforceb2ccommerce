/**
*
* @input Order : dw.order.Order
*
* @output Decision : String The decision of the complete request, one of ACCEPT, REJECT, or ERROR
* @output ReasonCode : Number The global reason code returned by Cybersource (100 = Success)
* @output RequestID : String The request id generated by Cybersource
* @output RequestToken : String the token generated by Cybersource
* @output CaptureReasonCode : Number The auth reason code returned by Cybersource (100 = Success)
* @output CaptureAmount : String the amount authorized by Cybersource
*
*/
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.rpc );
importPackage( dw.util );

importScript('libCybersource.ds');

function execute( pdict : PipelineDictionary ) : Number
{

    // read pipeline dictionary input parameter
    var order : Order = pdict.Order;
    
    if(order.getPaymentInstruments(PaymentInstrument.METHOD_CREDIT_CARD).empty || order.getPaymentInstruments(PaymentInstrument.METHOD_CREDIT_CARD)[0].paymentTransaction.custom.paid == true)
		return PIPELET_ERROR;

	var CybersourceHelper = getCybersourceHelper();
	
	var csReference : WebReference = webreferences.CyberSourceTransaction;
	var service : Stub = csReference.getService("TransactionProcessor", "portXML");

	CybersourceHelper.setEndpoint(service);
	
	if(!CybersourceHelper.createHeader(service)){
		return null;
	}

	var request = new csReference.RequestMessage();
	CybersourceHelper.addCCCaptureRequestInfo(request, order);

	var response = null;
	// send request
	try{
		response = service.runTransaction(request);
	}catch(e){
		Logger.error("[libCybersource.ds] Error in taxation request ( {0} )",e.message);
		return false;
	}
	
	if(response == null){
		return PIPELET_ERROR;
	}
	
	pdict.RequestID = response.requestID;
	pdict.RequestToken = response.requestToken;
	pdict.ReasonCode = response.reasonCode.get();
	pdict.Decision = response.decision;
	if(null != response.ccCaptureReply){
		pdict.CaptureAmount = response.ccCaptureReply.amount;
		pdict.CaptureReasonCode = response.ccCaptureReply.reasonCode.get();
	}
	
	if("AmountPaid" in order.custom && response.decision == "ACCEPT")
	{
		if(order.custom.AmountPaid == null)
			order.custom.AmountPaid = 0.00;
		order.custom.AmountPaid += order.getPaymentInstruments(PaymentInstrument.METHOD_CREDIT_CARD)[0].paymentTransaction.amount.value;	
	}
		
    return PIPELET_NEXT;
}
