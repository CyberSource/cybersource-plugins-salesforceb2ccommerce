<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to test BML Authorization</description>
        </text-node>
        <node-display x="0" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_2">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to test Credit Card Authorization</description>
        </text-node>
        <node-display x="3" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestBMLAuth">
    <segment>
      <node>
        <start-node call-mode="public" name="TestBMLAuth" secure="false"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/billingaddress/CreateCyberSourceBillToObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourceBillTo" key="CyberSourceBillTo"/>
          <key-binding alias="CurrentRequest.httpHeaders[&quot;x-is-remote_addr&quot;]" key="ipAddress"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/shipping/CreateCyberSourceShipToObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourceShipTo" key="CyberSourceShipTo"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/payment/CreateCyberSourcePurchaseTotalsObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourcePurchaseTotals" key="CyberSourcePurchaseTotals"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/payment/CreateCyberSourceBMLPaymentCard.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourcePaymentCard" key="CyberSourceCard"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b5" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/BML/CreateCyberSourceBMLObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourceBML" key="CyberSourceBML"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b6" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/TestBML.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="authamount" key="AuthorizationAmount"/>
          <key-binding alias="authcode" key="AuthorizationCode"/>
          <key-binding alias="authreason" key="AuthorizationReasonCode"/>
          <key-binding alias="descision" key="Decision"/>
          <key-binding alias="reason" key="ReasonCode"/>
          <key-binding alias="requestid" key="RequestID"/>
          <key-binding alias="token" key="RequestToken"/>
          <key-binding alias="id" key="merchantID"/>
          <key-binding alias="password" key="password"/>
          <key-binding alias="newid" key="newid"/>
          <key-binding alias="CybersourceBillTo" key="billTo"/>
          <key-binding alias="CybersourceBML" key="bml"/>
          <key-binding alias="CybersourcePaymentCard" key="card"/>
          <key-binding alias="CybersourcePurchaseTotals" key="purchaseTotals"/>
          <key-binding alias="CybersourceShipTo" key="shipTo"/>
          <key-binding alias="request" key="foobar"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b7" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="custom/BMLUnitTestResults"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_4">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestCCAuth">
    <segment>
      <node>
        <start-node call-mode="public" name="TestCCAuth" secure="false"/>
        <node-display x="3" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/billingaddress/CreateCyberSourceBillToObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourceBillTo" key="CyberSourceBillTo"/>
          <key-binding alias="card" key="CyberSourceCard"/>
          <key-binding alias="purchaseTotals" key="CyberSourcePurchaseTotals"/>
          <key-binding alias="shipTo" key="CyberSourceShipTo"/>
          <key-binding alias="CurrentRequest.httpHeaders[&quot;x-is-remote_addr&quot;]" key="ipAddress"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b3.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/shipping/CreateCyberSourceShipToObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourceShipTo" key="CyberSourceShipTo"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/payment/CreateCyberSourcePurchaseTotalsObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourcePurchaseTotals" key="CyberSourcePurchaseTotals"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b5.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/payment/CreateCyberSourcePaymentCardObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourcePaymentCard" key="CyberSourceCard"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b5" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b6.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/TestCCAuth.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="reason" key="ReasonCode"/>
          <key-binding alias="authreason" key="AuthorizationReasonCode"/>
          <key-binding alias="authamount" key="AuthorizationAmount"/>
          <key-binding alias="authcode" key="AuthorizationCode"/>
          <key-binding alias="descision" key="Decision"/>
          <key-binding alias="requestid" key="RequestID"/>
          <key-binding alias="token" key="RequestToken"/>
          <key-binding alias="CybersourceBillTo" key="billTo"/>
          <key-binding alias="CybersourcePaymentCard" key="card"/>
          <key-binding alias="CybersourcePurchaseTotals" key="purchaseTotals"/>
          <key-binding alias="CybersourceShipTo" key="shipTo"/>
          <key-binding alias="AVSCode" key="AVSCode"/>
          <key-binding alias="AVSCodeRaw" key="AVSCodeRaw"/>
          <key-binding alias="DAVReasonCode" key="DAVReasonCode"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b6" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="custom/CCAuthUnitTestResults"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_6">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to test Taxation</description>
        </text-node>
        <node-display x="6" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_7">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="7" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_8">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="4" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestTax">
    <segment>
      <node>
        <start-node call-mode="public" name="TestTax" secure="false"/>
        <node-display x="6" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/billingaddress/CreateCyberSourceBillToObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourceBillTo" key="CyberSourceBillTo"/>
          <key-binding alias="card" key="CyberSourceCard"/>
          <key-binding alias="purchaseTotals" key="CyberSourcePurchaseTotals"/>
          <key-binding alias="shipTo" key="CyberSourceShipTo"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b3.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/shipping/CreateCyberSourceShipToObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourceShipTo" key="CyberSourceShipTo"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/payment/CreateCyberSourcePurchaseTotalsObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourcePurchaseTotals" key="CyberSourcePurchaseTotals"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b5.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/payment/CreateCyberSourcePaymentCardObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourcePaymentCard" key="CyberSourceCard"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b5" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b9.4"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Taxation/CreateCyberSourceTaxRequestObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourceTaxService" key="CyberSourceTaxRequest"/>
          <key-binding alias="taxService" key="CybersourceTaxService"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b6" source-connector="error">
          <transition target-connector="in1" target-path="./b9.4"/>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/ShipFrom/CreateCybersourceShipFromObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="shipFrom" key="CybersourceShipFrom"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b7" source-connector="error">
          <transition target-connector="in1" target-path="./b9.3"/>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/Taxation/CreateCybersourceTaxationItems.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="ia" key="itemarray"/>
          <key-binding alias="itemmap" key="itemmap"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b8" source-connector="error">
          <transition target-connector="in1" target-path="./b9.2"/>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/TestTax.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="ReasonCode" key="ReasonCode"/>
          <key-binding alias="AuthorizationReasonCode" key="AuthorizationReasonCode"/>
          <key-binding alias="AuthorizationAmount" key="AuthorizationAmount"/>
          <key-binding alias="AuthorizationCode" key="AuthorizationCode"/>
          <key-binding alias="Decision" key="Decision"/>
          <key-binding alias="RequestID" key="RequestID"/>
          <key-binding alias="RequestToken" key="RequestToken"/>
          <key-binding alias="CybersourceBillTo" key="billTo"/>
          <key-binding alias="CybersourcePaymentCard" key="card"/>
          <key-binding alias="CybersourcePurchaseTotals" key="purchaseTotals"/>
          <key-binding alias="CybersourceShipTo" key="shipTo"/>
          <key-binding alias="ia" key="itemArray"/>
          <key-binding alias="itemmap" key="itemMap"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="shipFrom" key="shipFrom"/>
          <key-binding alias="taxService" key="taxService"/>
          <key-binding alias="taxamount" key="totalTaxAmount"/>
          <key-binding alias="DAVReasonCode" key="DAVReasonCode"/>
          <key-binding alias="TaxReply" key="TaxReply"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b9" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="-1"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="-1"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="-1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="custom/TaxUnitTestResults"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_10">
    <segment>
      <node>
        <text-node>
          <description>Please comment Line 29 of CreateCyberSourcePurchaseTotalObject.ds before executing TestTax unit test case</description>
        </text-node>
        <node-display width="2" x="7" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_11">
    <segment>
      <node>
        <text-node>
          <description>Test delivery address response, authorize if reason code 100</description>
        </text-node>
        <node-display x="12" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestDAVCheck">
    <segment>
      <node>
        <start-node call-mode="public" name="TestDAVCheck" secure="false"/>
        <node-display x="12" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="CybersourceUnitTesting-CreateBillTo"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="CybersourceUnitTesting-CreateShipTo"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/TestDAVRequest.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="DAVReasonCode" key="DAVReasonCode"/>
          <key-binding alias="DAVReasonCode" key="ReasonCode"/>
          <key-binding alias="Decision" key="Decision"/>
          <key-binding alias="RequestID" key="RequestID"/>
          <key-binding alias="RequestToken" key="RequestToken"/>
          <key-binding alias="billto" key="billTo"/>
          <key-binding alias="shipto" key="shipTo"/>
          <key-binding alias="InvalidFieldsArray" key="InvalidFieldsArray"/>
          <key-binding alias="MissingFieldsArray" key="MissingFieldsArray"/>
          <key-binding alias="StandardizedAddress" key="StandardizedAddress"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="3" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../+1/b3.1/b2.2"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!empty(DAVReasonCode)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in1" target-path="./+1"/>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="-1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="ReasonCode" key="From_0"/>
          <key-binding alias="DAVReasonCode" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display orientation="horizontal" x="2" y="0"/>
      </node>
      <transition target-connector="in3" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
          <bend-point relative-to="source" x="1" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-2" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="DAVReasonCode==100" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="&quot;Authorized&quot;" key="From_0"/>
                <key-binding alias="Result" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="11"/>
            </node>
            <transition target-connector="in1" target-path="../+4">
              <transition-display>
                <bend-point relative-to="source" x="0" y="2"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="DAVReasonCode!=101" condition-operator="expr"/>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <decision-node condition-key="DAVReasonCode!=102" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="target" x="0" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <decision-node condition-key="DAVReasonCode!=150 &amp;&amp; DAVReasonCode!=151 &amp;&amp; DAVReasonCode!=152" condition-operator="expr"/>
                    <node-display x="0" y="2"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in"/>
                      <segment>
                        <node>
                          <decision-node condition-key="DAVReasonCode!=234" condition-operator="expr"/>
                          <node-display x="0" y="2"/>
                          <branch basename="b2" source-connector="yes">
                            <transition target-connector="in"/>
                            <segment>
                              <node>
                                <decision-node condition-key="DAVReasonCode!=450&amp;&amp;DAVReasonCode!=451&amp;&amp;DAVReasonCode!=452&amp;&amp;DAVReasonCode!=453&amp;&amp;DAVReasonCode!=454&amp;&amp;DAVReasonCode!=455&amp;&amp;DAVReasonCode!=456&amp;&amp;DAVReasonCode!=457&amp;&amp;DAVReasonCode!=458&amp;&amp;DAVReasonCode!=459&amp;&amp;DAVReasonCode!=460" condition-operator="expr"/>
                                <node-display x="0" y="2"/>
                                <branch basename="b2" source-connector="yes">
                                  <transition target-connector="in"/>
                                  <segment>
                                    <node>
                                      <decision-node condition-key="DAVReasonCode!=700" condition-operator="expr"/>
                                      <node-display x="0" y="2"/>
                                      <branch basename="b2" source-connector="yes">
                                        <transition target-connector="in2" target-path="../../../+4"/>
                                      </branch>
                                    </node>
                                    <transition target-connector="in2" target-path="../../../+3"/>
                                  </segment>
                                </branch>
                              </node>
                              <transition target-connector="in1" target-path="../../../../+3"/>
                            </segment>
                          </branch>
                        </node>
                        <transition target-connector="in2" target-path="../+2"/>
                      </segment>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="2" y="0"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="2"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="4"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="&quot;Error&quot;" key="From_0"/>
                      <key-binding alias="Result" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in3" target-path="../../+4">
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="null" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <transition target-connector="in2" target-path="../+2"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_0"/>
          <key-binding alias="null" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
      <transition target-connector="in2" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="2" y="0"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="6"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="&quot;Declined&quot;" key="From_0"/>
          <key-binding alias="Result" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="3"/>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-2" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="custom/TestDAVCheckResults"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_13">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="13" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_14">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create BillTo data object</description>
        </text-node>
        <node-display x="16" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_15">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to create shipTo data object</description>
        </text-node>
        <node-display x="19" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateBillTo">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateBillTo" secure="false"/>
        <node-display x="16" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/DAV/CreateMockCybersourceBillToObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="billto" key="CyberSourceBillTo"/>
          <key-binding alias="CurrentRequest.httpHeaders[&quot;x-is-remote_addr&quot;]" key="ipAddress"/>
          <key-binding alias="CurrentForms.checkout.bml" key="BMLForm"/>
          <key-binding alias="asd" key="asd"/>
          <key-binding alias="true" key="UseBillingAddr"/>
          <key-binding alias="ReadFromForm" key="ReadFromForm"/>
          <key-binding alias="ReadFromBasket" key="ReadFromBasket"/>
          <key-binding alias="false" key="InvalidFields"/>
          <key-binding alias="false" key="MissingFields"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="OK">
          <description>OK</description>
        </end-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CreateShipTo">
    <segment>
      <node>
        <start-node call-mode="private" name="CreateShipTo" secure="false"/>
        <node-display x="19" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/DAV/CreateMockCybersourceShipToObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="shipto" key="CybersourceBillTo"/>
          <key-binding alias="false" key="InvalidFields"/>
          <key-binding alias="false" key="MissingFields"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_18">
    <segment>
      <node>
        <text-node>
          <description>Test Payer Authorization, authorize if PAReasonCode 100</description>
        </text-node>
        <node-display x="22" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestPA">
    <segment>
      <node>
        <start-node call-mode="public" name="TestPA" secure="false"/>
        <node-display x="22" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/payment/CreateCyberSourcePaymentCardObject.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourcePaymentCard" key="CyberSourceCard"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Check enrollment" pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/TestPayerAuthEnrollCheck.ds"/>
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="TargetPaymentInstrument.paymentTransaction.amount" key="Amount"/>
          <key-binding alias="CybersourcePaymentCard" key="CreditCardForm"/>
          <key-binding alias="OrderNo" key="OrderNo"/>
          <key-binding alias="CurrentRequest" key="Request"/>
          <key-binding alias="PADecission" key="Decision"/>
          <key-binding alias="PARequired" key="PayerAuthRequired"/>
          <key-binding alias="PAReasonCode" key="ReasonCode"/>
          <key-binding alias="PARequestID" key="RequestID"/>
          <key-binding alias="PARequestToken" key="RequestToken"/>
          <key-binding alias="CommerceIndicator" key="CommerceIndicator"/>
          <key-binding alias="ProofXML" key="ProofXML"/>
          <key-binding alias="AcsURL" key="AcsURL"/>
          <key-binding alias="PAReq" key="PAReq"/>
          <key-binding alias="ProxyPAN" key="ProxyPAN"/>
          <key-binding alias="PAXID" key="XID"/>
          <key-binding alias="CybersourcePaymentCard" key="CreditCard"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="PAReasonCode == 100" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node custom-name="Remove reason code from PD" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <key-binding alias="''" key="From_0"/>
                <key-binding alias="PAReasonCode" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/PATestResult.isml"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="!empty(AcsURL)" condition-operator="expr"/>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node custom-name="Remove reason code from PD" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <key-binding alias="''" key="From_0"/>
                <key-binding alias="PAReasonCode" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-continue-node secure="false" start-name="PAForm" transaction-required="false">
                <template buffered="true" dynamic="false" name="cart/payerauthenticationtest"/>
              </interaction-continue-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node custom-name="Save response values" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentHttpParameterMap.MD.stringValue" key="From_0"/>
                <key-binding alias="PAResponseMD" key="To_0"/>
                <key-binding alias="CurrentHttpParameterMap.PaRes.stringValue" key="From_1"/>
                <key-binding alias="PAResponsePARes" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-continue-node secure="false" start-name="RedirectToExitFrame" transaction-required="false">
                <template buffered="true" dynamic="false" name="cart/payerauthenticationredirect"/>
              </interaction-continue-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="PAResponseMD == CurrentSession.sessionID" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="ScriptFile" value="Cybersource_UnitTesting/TestPayerAuthValidation.ds"/>
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="CurrentHttpParameterMap.PaRes.stringValue" key="PAReq"/>
                      <key-binding alias="OrderNo" key="OrderNo"/>
                      <key-binding alias="TargetPaymentInstrument.paymentTransaction.amount" key="Amount"/>
                      <key-binding alias="CurrentForms.billing.paymentMethods.creditCard" key="CreditCardForm"/>
                      <key-binding alias="PAVResult" key="AuthenticationResult"/>
                      <key-binding alias="PAVStatusMessage" key="AuthenticationStatusMessage"/>
                      <key-binding alias="CAVV" key="CAVV"/>
                      <key-binding alias="PAVCommerceIndicator" key="CommerceIndicator"/>
                      <key-binding alias="PAVDecision" key="Decision"/>
                      <key-binding alias="ECI" key="ECI"/>
                      <key-binding alias="PAVReasonCode" key="ReasonCode"/>
                      <key-binding alias="PAVRequestID" key="RequestID"/>
                      <key-binding alias="PAVRequestToken" key="RequestToken"/>
                      <key-binding alias="PAVXID" key="XID"/>
                      <key-binding alias="UCAFAuthenticationData" key="UCAFAuthenticationData"/>
                      <key-binding alias="UCAFCollectionIndicator" key="UCAFCollectionIndicator"/>
                      <key-binding alias="ECIRaw" key="ECIRaw"/>
                      <key-binding alias="PAResponsePARes" key="PaRes"/>
                      <key-binding alias="ParesStatus" key="ParesStatus"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="error">
                      <transition target-connector="in2" target-path="./b3.2">
                        <transition-display>
                          <bend-point relative-to="target" x="0" y="-2"/>
                        </transition-display>
                      </transition>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <decision-node condition-key="(PAVReasonCode == 100)" condition-operator="expr"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b3" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <decision-node condition-key="(PAXID == PAVXID)" condition-operator="expr"/>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="yes">
                            <transition target-connector="in">
                              <transition-display>
                                <bend-point relative-to="source" x="0" y="1"/>
                              </transition-display>
                            </transition>
                            <segment>
                              <node>
                                <interaction-node transaction-required="false">
                                  <template buffered="true" dynamic="false" name="custom/PATestResult.isml"/>
                                </interaction-node>
                                <node-display x="0" y="1"/>
                              </node>
                            </segment>
                          </branch>
                        </node>
                        <transition target-connector="in1" target-path="./+1">
                          <transition-display>
                            <bend-point relative-to="target" x="0" y="2"/>
                          </transition-display>
                        </transition>
                      </segment>
                      <segment>
                        <node>
                          <join-node/>
                          <node-display x="2" y="-1"/>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="target" x="-1" y="0"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <interaction-node transaction-required="false">
                            <template buffered="true" dynamic="false" name="custom/PATestResult.isml"/>
                          </interaction-node>
                          <node-display orientation="horizontal" x="1" y="-1"/>
                        </node>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <interaction-node transaction-required="false">
                      <template buffered="true" dynamic="false" name="custom/PATestResult.isml"/>
                    </interaction-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/PATestResult.isml"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Log error" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <key-binding alias="dw.system.Logger.error('An error occured during PayerAuthEnroll check. (ReasonCode: {0} , RequestID: {1}',PAReasonCode,PARequestID)" key="From_0"/>
          <key-binding alias="null" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="custom/PATestResult.isml"/>
        </interaction-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_20">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="23" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_21">
    <segment>
      <node>
        <text-node>
          <description>Missing or invalid fields</description>
        </text-node>
        <node-display x="14" y="7"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_22">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is used to test finger print</description>
        </text-node>
        <node-display x="3" y="8"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestFingerprint">
    <segment>
      <node>
        <start-node call-mode="public" name="TestFingerprint" secure="false"/>
        <node-display x="3" y="9"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="custom/FingerPrintRedirect"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_24">
    <segment>
      <node>
        <text-node>
          <description>Make the pipeline node as public before using</description>
        </text-node>
        <node-display x="4" y="9"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_25">
    <segment>
      <node>
        <text-node>
          <description>Service Time-out,
Server Time-out or
General Error</description>
        </text-node>
        <node-display x="14" y="10"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestAlipayInitiateService">
    <segment>
      <node>
        <start-node name="TestAlipayInitiateService" secure="false"/>
        <node-display x="3" y="12"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="alipayPaymentType" key="To_0"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue(&quot;apPaymentType&quot;)" key="From_0"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/payment/CreateCyberSourcePurchaseTotalsObjectForAlipay.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourcePurchaseTotals" key="CyberSourcePurchaseTotals"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/AP/TestAlipayInitiateRequest.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="CybersourcePurchaseTotals" key="purchaseTotals"/>
          <key-binding alias="Decision" key="Decision"/>
          <key-binding alias="ReasonCode" key="ReasonCode"/>
          <key-binding alias="ReconciliationID" key="ReconciliationID"/>
          <key-binding alias="RequestID" key="RequestID"/>
          <key-binding alias="RequestToken" key="RequestToken"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="custom/AlipayInitiateServiceTestResults"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestAlipayCheckStatusService">
    <segment>
      <node>
        <start-node name="TestAlipayCheckStatusService" secure="false"/>
        <node-display x="6" y="12"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.requestID.stringValue" key="From_0"/>
          <key-binding alias="RequestID" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="Cybersource_UnitTesting/AP/TestAlipayCheckStatusRequest.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="RequestID" key="RequestID"/>
          <key-binding alias="Decision" key="Decision"/>
          <key-binding alias="PaymentStatus" key="PaymentStatus"/>
          <key-binding alias="ProcessorTransactionId" key="ProcessorTransactionID"/>
          <key-binding alias="ReasonCode" key="ReasonCode"/>
          <key-binding alias="ReconciliationID" key="ReconciliationID"/>
          <key-binding alias="RequestToken" key="RequestToken"/>
          <key-binding alias="CheckStatusRequestID" key="checkStatusRequestID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="custom/AlipayCheckStatusServiceTestResults"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_28">
    <segment>
      <node>
        <text-node>
          <description>Config error.  MerchantID is unrecognized</description>
        </text-node>
        <node-display x="14" y="12"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_29">
    <segment>
      <node>
        <text-node>
          <description>Miscellanous address verfication issues.  Customer needs to update information and re-submit</description>
        </text-node>
        <node-display x="14" y="14"/>
      </node>
    </segment>
  </branch>
  <branch basename="Authorization">
    <segment>
      <node>
        <start-node name="Authorization" secure="false">
          <start-parameter value="oid"/>
          <start-parameter value="amount"/>
        </start-node>
        <node-display x="21" y="15"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="credentials" key="To_0"/>
          <key-binding alias="CurrentRequest.getHttpHeaders().get(&quot;authorization&quot;)" key="From_0"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/paypal/AuthSample.ds"/>
          <key-binding alias="CurrentRequest" key="Request"/>
          <key-binding alias="CurrentRequest" key="CurrentRequest"/>
          <key-binding alias="credentials" key="AuthCredentials"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1"/>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.oid.stringValue" key="From_0"/>
          <key-binding alias="oid" key="To_0"/>
          <key-binding alias="CurrentHttpParameterMap.amount.stringValue" key="From_1"/>
          <key-binding alias="amount" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetOrder" pipelet-set-identifier="bc_api">
          <key-binding alias="oid" key="OrderNo"/>
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="source" x="1" y="-2"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="-2"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Order.getPaymentInstruments(&quot;PayPal&quot;)[0].paymentTransaction.custom.orderSetupRequestToken" key="From_0"/>
          <key-binding alias="orderSetupRequestToken" key="To_0"/>
          <key-binding alias="Order.getPaymentInstruments(&quot;PayPal&quot;)[0].paymentTransaction.custom.orderSetupRequestId" key="From_1"/>
          <key-binding alias="orderSetupRequestId" key="To_1"/>
          <key-binding alias="Order.getPaymentInstruments(&quot;PayPal&quot;)[0].paymentTransaction.custom.orderSetupTransactionId" key="From_2"/>
          <key-binding alias="orderSetupTransactionId" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/Subscription/CreateCyberSourcePurchaseTotalsObject_UserData.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="amount" key="amount"/>
          <key-binding alias="&quot;USD&quot;" key="currency"/>
          <key-binding alias="purchaseTotals" key="CyberSourcePurchaseTotals"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="source" x="1" y="-1"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node/>
              <node-display x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="custom/testpaypalCapture"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="TestPaypalCaptureService">
    <segment>
      <node>
        <start-node name="TestPaypalCaptureService" secure="false"/>
        <node-display x="3" y="17"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetOrder" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentHttpParameterMap.orderNo.value" key="OrderNo"/>
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cybersource/paypal/PaypalCaptureRequest.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Order" key="Order"/>
          <key-binding alias="CaptureAmount" key="CaptureAmount"/>
          <key-binding alias="CaptureReasonCode" key="CaptureReasonCode"/>
          <key-binding alias="Decision" key="Decision"/>
          <key-binding alias="ReasonCode" key="ReasonCode"/>
          <key-binding alias="RequestID" key="RequestID"/>
          <key-binding alias="RequestToken" key="RequestToken"/>
          <key-binding alias="Response" key="Response"/>
          <key-binding alias="PaymentStatus" key="PaymentStatus"/>
          <key-binding alias="CaptureTransactionID" key="CaptureTransactionID"/>
          <key-binding alias="paypalReceiptId" key="paypalReceiptId"/>
          <key-binding alias="ParentTransactionId" key="ParentTransactionId"/>
          <key-binding alias="AuthorizationId" key="AuthorizationId"/>
          <key-binding alias="CaptureCorrelationID" key="paypalCorrelationId"/>
          <key-binding alias="CaptureFeeAmount" key="paypalFeeAmount"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="custom/scripterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="custom/PaypalCaptureServiceTestResults"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_32">
    <segment>
      <node>
        <text-node>
          <description>Unsupported character set</description>
        </text-node>
        <node-display x="14" y="16"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_33">
    <segment>
      <node>
        <text-node>
          <description>Unknown or undocumented api error ReasonCode</description>
        </text-node>
        <node-display x="13" y="18"/>
      </node>
    </segment>
  </branch>
  <branch basename="Reversal">
    <segment>
      <node>
        <start-node name="Reversal" secure="false"/>
        <node-display x="23" y="16"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.oid.stringValue" key="From_0"/>
          <key-binding alias="oid" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetOrder" pipelet-set-identifier="bc_api">
          <key-binding alias="oid" key="OrderNo"/>
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cybersource-PaypalReversal"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="custom/testpaypalCapture"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Capture">
    <segment>
      <node>
        <start-node call-mode="public" name="Capture" secure="false"/>
        <node-display x="25" y="16"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.oid.stringValue" key="From_0"/>
          <key-binding alias="oid" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetOrder" pipelet-set-identifier="bc_api">
          <key-binding alias="oid" key="OrderNo"/>
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="-1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="2" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cybersource-CapturePaypal"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="custom/testpaypalCapture"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
