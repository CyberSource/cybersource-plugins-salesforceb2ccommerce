/**
* 	TestAlipayInitiateRequest.ds
*	This script call service to initiate payment for Alipay and set the response in response object
* 	and also handles the logging of different error scenarios while making service call.
*
* 	@input  purchaseTotals : Object
*
* 	@output Decision : String The decision of the complete request, one of ACCEPT, REJECT, or ERROR
* 	@output ReasonCode : Number The global reason code returned by Cybersource (100 = Success)
* 	@output RequestID : String The request id generated by Cybersource
* 	@output RequestToken : String the token generated by Cybersource
* 	@output ReconciliationID : String
*
*/
importPackage( dw.system );

importScript('cybersource/libCybersource.ds');
importScript('cybersource/Cybersource_PurchaseTotals_Object.ds');

function execute( pdict : PipelineDictionary ) : Number
{
	//set the order object, purchase object and return URL from pipeline dictionary
   	var purchaseObject: PurchaseTotals_Object = pdict.purchaseTotals;
   	var productName : String = "Test Product";
   	var productDescription : String = "Test Description";
   	//create service stubs
   	var CybersourceHelper = getCybersourceHelper();	
   	var csReference : WebReference = webreferences.CyberSourceTransaction;
   	var service : Stub = csReference.getService("TransactionProcessor", "portXML");
   	service.setTimeout(CybersourceHelper.getCsServiceRequestTimeout());
   	CybersourceHelper.setEndpoint(service);

	if(!CybersourceHelper.createHeader(service))
	{
		return PIPELET_ERROR;
	}
	
	//set alipay payment type to pass it as input in request
	var alipayPaymentType : String = CybersourceHelper.getAlipayPaymentType();
	var request = new csReference.RequestMessage();
	
	//call alipay initiate service by passing required input parameters
	CybersourceHelper.apInitiateService(request,null,purchaseObject,productName,productDescription,"test",alipayPaymentType.value);
	var response = null;
	//get the response in response object
	try
	{
		response = service.runTransaction(request);
	}
	catch(e)
	{
		Logger.getRootLogger().fatal("[AlipayInitiatePaymentRequest.ds] Error in Execute request ( {0} )",e.message);
		
		if(e.message.indexOf("SocketTimeoutException") != -1){
            pdict.ReasonCode = 999; //set timeout error code 999
            return PIPELET_NEXT;
		}       
		
		return PIPELET_ERROR;
	}
	
	//log the response in debug log
	Logger.debug(response);
	
	//log the response in case of error scenario
	if(response == null)
	{
		Logger.getRootLogger().fatal("[libCybersource.ds] Error : null response");
		return PIPELET_ERROR;
	}
	
	//set response values in pipeline dictionary
	pdict.RequestID = response.requestID;
	pdict.RequestToken = response.requestToken;
	pdict.ReasonCode = response.reasonCode.get();
	pdict.Decision = response.decision;
	if(!empty(response.apInitiateReply)) {
		pdict.ReconciliationID = response.apInitiateReply.reconciliationID;
	}
	return PIPELET_NEXT;
}
